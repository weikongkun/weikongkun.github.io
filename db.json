{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/Git/git生命周期.png","path":"img/Git/git生命周期.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/[RS]Redis-x64-3.2.100.msi.torrent","path":"images/[RS]Redis-x64-3.2.100.msi.torrent","modified":1,"renderable":1},{"_id":"themes/next/source/images/aipay.png","path":"images/aipay.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/background.jpg","path":"images/background.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechat.png","path":"images/wechat.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/alen.jpg","path":"images/alen.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/xian.jpg","path":"images/xian.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1538099968918},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1538099968919},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1538099968920},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1538099968919},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1538099968920},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1538099968921},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1538099968921},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1538099968922},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1538099968922},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1538099968923},{"_id":"themes/next/_config.yml","hash":"6f53a88a866de4d71e5c872ee4eaa2f21e112514","modified":1538099968923},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1538099968924},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1538099968924},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1538099968979},{"_id":"source/_posts/Git分支.md","hash":"805ef25ebe9fa1d0e7726aa0c242c0f26c4e67c1","modified":1538099968862},{"_id":"source/_posts/Git基础.md","hash":"183ce5d588b94b3f2f272393562348fbfb0d849d","modified":1538133953254},{"_id":"source/_posts/Java堆外内存.md","hash":"ed7d8b2f117dd29c3c2592c05952aaa05bfcaef7","modified":1538138514490},{"_id":"source/_posts/SOA.md","hash":"fc9d17677258a21f0b35e977acd720d5538beb2d","modified":1538099968864},{"_id":"source/_posts/Netty入门.md","hash":"e7270fb941bfebbc88ce03436108e1ab0382b70c","modified":1538126305351},{"_id":"source/_posts/分布式入门.md","hash":"80160ec3b15e54fb13f70404e7451168196f9e2a","modified":1538099968864},{"_id":"source/_posts/锁池与等待池.md","hash":"760e65987af373c2fcb3b394662eddb278fb29d2","modified":1538099968865},{"_id":"source/_posts/面经.md","hash":"f490c7a1286c54ca5598823e0e37a6ccdb2aedb9","modified":1538099968865},{"_id":"source/about/index.md","hash":"5b99af5dd3f1b85c7b025efc0ffdbdf5b733ec88","modified":1538099968866},{"_id":"source/categories/index.md","hash":"83f35c783997de3da288068d1d33f44d64494a19","modified":1538099968867},{"_id":"source/tags/index.md","hash":"0e6a73e2d276d6f92433edb48a27f103d99e1f71","modified":1538099968867},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1538099968925},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1538099968925},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1538099968926},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1538099968926},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1538099968928},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1538099968927},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1538099968928},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1538099968929},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1538099968929},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1538099968930},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1538099968930},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1538099968931},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1538099968931},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1538099968932},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1538099968932},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1538099968933},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1538099968935},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1538099968975},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1538099968976},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1538099968976},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1538099968977},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1538099968977},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1538099968978},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1538099968978},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1538099968979},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1538099968980},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1538099969250},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1538099969251},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1538099969253},{"_id":"source/_posts/《现代操作系统》总结.md","hash":"784fc51c02273d62250f14250c08d314c3446406","modified":1541511829780},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969058},{"_id":"source/img/Git/git生命周期.png","hash":"4e259bf41d408d7e8b749d6a53cb41abbc16e88b","modified":1538125885456},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1538099968934},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1538099968934},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1538099968935},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1538099968936},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1538099968936},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1538099968937},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1538099968938},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1538099968938},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1538099968939},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1538099968940},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1538099968940},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1538099968942},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1538099968943},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1538099968943},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1538099968944},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1538099968950},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1538099968951},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1538099968954},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1538099968968},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1538099968968},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1538099968969},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1538099968968},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1538099968969},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1538099968970},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1538099968970},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1538099968981},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1538099968981},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1538099968982},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1538099968982},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1538099968983},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1538099968984},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1538099968984},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1538099968985},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1538099968986},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1538099969058},{"_id":"themes/next/source/images/[RS]Redis-x64-3.2.100.msi.torrent","hash":"548ff986130b5a9edfc2e48acd5ad1bcadeb53aa","modified":1538099969059},{"_id":"themes/next/source/images/aipay.png","hash":"46527a97189cf6c5f6bbc4a1ebd5e53e9e91c202","modified":1538099969060},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1538099969062},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1538099969063},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1538099969064},{"_id":"themes/next/source/images/background.jpg","hash":"ee0dfef2b0a1cdb69ec2cd5a02cf8ab9ac6838ba","modified":1538099969064},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1538099969065},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1538099969066},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1538099969066},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1538099969067},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1538099969067},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1538099969068},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1538099969069},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1538099969069},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1538099969070},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1538099969070},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1538099969071},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1538099969071},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1538099969072},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1538099969073},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1538099969073},{"_id":"themes/next/source/images/wechat.png","hash":"f996c43cf092468fd02fceba87be06e87d5c5f37","modified":1538099969074},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099968952},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099968952},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969036},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969036},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969037},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969055},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538099969057},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1538099968942},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1538099968944},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1538099968945},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1538099968941},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1538099968945},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1538099968946},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1538099968946},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1538099968947},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1538099968949},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1538099968951},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1538099968952},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1538099968953},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1538099968955},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1538099968955},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1538099968956},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1538099968957},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1538099968957},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1538099968956},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1538099968958},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1538099968959},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1538099968959},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1538099968960},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1538099968960},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1538099968961},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1538099968962},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1538099968962},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1538099968963},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1538099968964},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1538099968964},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1538099968965},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1538099968965},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1538099968966},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1538099968967},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1538099968958},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1538099968973},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1538099968974},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1538099968973},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1538099968975},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1538099969035},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1538099969036},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1538099969037},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1538099969055},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1538099969055},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1538099969056},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1538099969057},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1538099969037},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1538099969082},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1538099969082},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1538099969081},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1538099969083},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1538099969084},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1538099969086},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1538099969084},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1538099969087},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1538099969088},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1538099969085},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1538099969089},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1538099969100},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1538099969104},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1538099969103},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1538099969105},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1538099969106},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1538099969127},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1538099969125},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1538099969129},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1538099969131},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1538099969138},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1538099969140},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1538099969142},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1538099969144},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1538099969145},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1538099969168},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1538099969173},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1538099969175},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1538099969176},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1538099969178},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1538099969180},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1538099969182},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1538099969184},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1538099969186},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1538099969188},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1538099969191},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1538099969193},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1538099969195},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1538099969196},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1538099969198},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1538099969200},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1538099969202},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1538099969204},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1538099969205},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1538099969207},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1538099969209},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1538099969211},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1538099969212},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1538099969214},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1538099969217},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1538099969219},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1538099969220},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1538099969234},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1538099969237},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1538099969242},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1538099969244},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1538099969247},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1538099969170},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1538099968971},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1538099968972},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1538099968987},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1538099968988},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1538099968989},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1538099968987},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1538099968989},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1538099969017},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1538099969000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1538099969031},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1538099969030},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1538099969031},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1538099969032},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1538099969033},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1538099969034},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1538099969039},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1538099969039},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1538099969040},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1538099969041},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1538099969033},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1538099969041},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1538099969042},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1538099969043},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1538099969043},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1538099969046},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1538099969046},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1538099969047},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1538099969048},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1538099969049},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1538099969050},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1538099969051},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1538099969052},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1538099969053},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1538099969053},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1538099969054},{"_id":"themes/next/source/images/alen.jpg","hash":"b674c60100240d1a7b64a59f5317e2da553db224","modified":1538099969062},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1538099969087},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1538099969098},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1538099969096},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1538099969099},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1538099969107},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1538099969107},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1538099969108},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1538099969109},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1538099969109},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1538099969110},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1538099969121},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1538099969122},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1538099969119},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1538099969134},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1538099969135},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1538099969148},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1538099969152},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1538099969150},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1538099969229},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1538099969231},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1538099969097},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1538099969164},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1538099969166},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1538099969240},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1538099968990},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1538099968991},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1538099968992},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1538099968993},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1538099968993},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1538099968994},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1538099968995},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1538099968996},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1538099969001},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1538099969001},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1538099969002},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1538099969002},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1538099969003},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1538099969004},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1538099969004},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1538099969005},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1538099969006},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1538099969006},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1538099969007},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1538099969007},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1538099969008},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1538099969009},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1538099969009},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1538099968996},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1538099968997},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1538099968998},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1538099968998},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1538099968999},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1538099969010},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1538099969011},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1538099969012},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1538099969012},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1538099969013},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1538099969014},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1538099969014},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1538099969015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1538099969016},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1538099968991},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1538099969016},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1538099969018},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1538099969018},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1538099969020},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1538099969021},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1538099969021},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1538099969022},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1538099969023},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1538099969022},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1538099969024},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1538099969024},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1538099969025},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1538099969026},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1538099969026},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1538099969027},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1538099969027},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1538099969028},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1538099969029},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1538099969029},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1538099969019},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1538099969044},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1538099969045},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1538099969049},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1538099969091},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1538099969093},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1538099969094},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1538099969095},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1538099969092},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1538099969113},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1538099969112},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1538099969114},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1538099969115},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1538099969117},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1538099969111},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1538099969155},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1538099969158},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1538099969162},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1538099969102},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1538099969225},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1538099969160},{"_id":"themes/next/source/images/xian.jpg","hash":"2fc22ce970b8f479510bc3b4688efcf218a56b1f","modified":1538099969080},{"_id":"public/atom.xml","hash":"d6983406ce7ea4b1235e4ee16c855b3519a09feb","modified":1541511853990},{"_id":"public/sitemap.xml","hash":"869da96345996a5bf3998c7007998379dbc417eb","modified":1541511853996},{"_id":"public/about/index.html","hash":"52117927289ebba58510640bb5501dd4ac8b4de5","modified":1541511854000},{"_id":"public/tags/index.html","hash":"599446e9c1a5ea7afee35f1e436b5f9b12206673","modified":1541511854000},{"_id":"public/archives/2018/08/index.html","hash":"01441f524e19fb6906b014c919dd670bdb9cbd4d","modified":1541511854000},{"_id":"public/archives/2018/11/index.html","hash":"bedb8f6f5f4194bb3c1d325787e30b709dd81a27","modified":1541511854000},{"_id":"public/categories/JVM/index.html","hash":"e3c01182e66ae446cd511a8f3643795519e7fd3b","modified":1541511854000},{"_id":"public/categories/分布式/index.html","hash":"3535ce2cacd629dc4e2ac0c86d59a88c76d4c986","modified":1541511854000},{"_id":"public/categories/Netty/index.html","hash":"2b4bba2aee6301c79325bd22bced7e180e11e024","modified":1541511854000},{"_id":"public/categories/Git/index.html","hash":"369bbb181bf9fe29afe8516c914bd7223d375c3d","modified":1541511854000},{"_id":"public/categories/面试/index.html","hash":"8aef3bba3ec596eef6ac899a5d79ea3abf115486","modified":1541511854000},{"_id":"public/categories/操作系统/index.html","hash":"b6324e977eef68f57c4c097efed989052f10d755","modified":1541511854000},{"_id":"public/tags/JVM/index.html","hash":"3ee2ee1f520424e509c12328451e0ca9c8e9c8e2","modified":1541511854000},{"_id":"public/tags/分布式/index.html","hash":"c349a6fdff3e17a71c26ed36b5d4813949c6f719","modified":1541511854000},{"_id":"public/tags/Netty/index.html","hash":"57a1f099cdb4f1fba9e75d14af5a8df9521e17cc","modified":1541511854000},{"_id":"public/tags/Git/index.html","hash":"0d43422d78467e8982b9bf96ba430dec64667b53","modified":1541511854000},{"_id":"public/tags/面试/index.html","hash":"337060f0064e2d77790e61f4fb1098355123c14e","modified":1541511854000},{"_id":"public/tags/操作系统/index.html","hash":"e401d139b7ef971fb557ff391c4708e1414994d3","modified":1541511854001},{"_id":"public/categories/index.html","hash":"07c8701f80b34b2cb54a9bef8a3b81919bfff833","modified":1541511854001},{"_id":"public/2018/11/06/《现代操作系统》总结/index.html","hash":"83285ddcdc31dc31a2f85ab8013c7ccd7dfc9230","modified":1541511854001},{"_id":"public/2018/09/28/Java堆外内存/index.html","hash":"c295d2f6aa1b28ed2b6ed70ac7ba57c1abccb043","modified":1541511854001},{"_id":"public/2018/09/28/Netty入门/index.html","hash":"a0176218da3411191a2ff24d3eb6e746b6e9ad67","modified":1541511854001},{"_id":"public/2018/09/28/Git分支/index.html","hash":"55c432481c91ac99055f5af10642baf69d2a3ab2","modified":1541511854001},{"_id":"public/2018/09/28/Git基础/index.html","hash":"91dcab52a227717164e891cdacba00600a1c48db","modified":1541511854001},{"_id":"public/2018/08/03/面经/index.html","hash":"d75205e9795cf4ea25a19061051931174791ba9c","modified":1541511854001},{"_id":"public/2018/07/27/SOA/index.html","hash":"61cbb820a952c7d2200e967a3fc00c343060e210","modified":1541511854001},{"_id":"public/2018/07/25/锁池与等待池/index.html","hash":"c82cc46efbbdc898bb6f8a97686bfa31b08599ce","modified":1541511854001},{"_id":"public/2018/07/24/分布式入门/index.html","hash":"3576d8965b51f7a82a4f3a794e6825aa71627f38","modified":1541511854001},{"_id":"public/archives/index.html","hash":"3dbea60485c9d96bf2158877ccb25f7a809222b4","modified":1541511854001},{"_id":"public/archives/2018/index.html","hash":"620d19bbae000a4d0ce4a04bd4d42e961b833d86","modified":1541511854001},{"_id":"public/archives/2018/07/index.html","hash":"986c4058d0845837cfa027d2def26c846430e4a2","modified":1541511854001},{"_id":"public/archives/2018/09/index.html","hash":"545ddcfad7fb175fdc2206aeca014afa2508f323","modified":1541511854001},{"_id":"public/index.html","hash":"1fc17d0543495bb66516e5c8061d73176cfa01a7","modified":1541511854002},{"_id":"public/img/Git/git生命周期.png","hash":"4e259bf41d408d7e8b749d6a53cb41abbc16e88b","modified":1541511854011},{"_id":"public/images/[RS]Redis-x64-3.2.100.msi.torrent","hash":"548ff986130b5a9edfc2e48acd5ad1bcadeb53aa","modified":1541511854011},{"_id":"public/images/aipay.png","hash":"46527a97189cf6c5f6bbc4a1ebd5e53e9e91c202","modified":1541511854011},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1541511854011},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1541511854011},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1541511854011},{"_id":"public/images/background.jpg","hash":"ee0dfef2b0a1cdb69ec2cd5a02cf8ab9ac6838ba","modified":1541511854011},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1541511854011},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1541511854011},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1541511854011},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1541511854011},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1541511854011},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1541511854011},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1541511854011},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1541511854011},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1541511854011},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1541511854011},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1541511854011},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1541511854011},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1541511854011},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1541511854011},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1541511854011},{"_id":"public/images/wechat.png","hash":"f996c43cf092468fd02fceba87be06e87d5c5f37","modified":1541511854011},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1541511854011},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1541511854012},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1541511854012},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1541511854012},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1541511854012},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1541511854012},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1541511854012},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1541511854012},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1541511854012},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1541511854012},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1541511854012},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1541511854012},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1541511854012},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1541511854012},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1541511854012},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1541511854506},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1541511854508},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1541511854509},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1541511854509},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1541511854509},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1541511854509},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1541511854510},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1541511854510},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1541511854510},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1541511854510},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1541511854510},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1541511854510},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1541511854510},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1541511854510},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1541511854510},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1541511854510},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1541511854510},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1541511854510},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1541511854510},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1541511854510},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1541511854510},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1541511854510},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1541511854511},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1541511854511},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1541511854511},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1541511854511},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1541511854511},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1541511854511},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1541511854511},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1541511854511},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1541511854511},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1541511854511},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1541511854511},{"_id":"public/css/main.css","hash":"d9ad8e825b1bb4557d613caa631f9157bff5d96a","modified":1541511854511},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1541511854516},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1541511854516},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1541511854516},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1541511854520},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1541511854520},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1541511854520},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1541511854521},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1541511854521},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1541511854521},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1541511854521},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1541511854521},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1541511854527},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1541511854527},{"_id":"public/images/alen.jpg","hash":"b674c60100240d1a7b64a59f5317e2da553db224","modified":1541511854527},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1541511854531},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1541511854531},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1541511854537},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1541511854537},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1541511854537},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1541511854538},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1541511854538},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1541511854538},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1541511854538},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1541511854538},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1541511854543},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1541511854543},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1541511854545},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1541511854545},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1541511854554},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1541511854558},{"_id":"public/images/xian.jpg","hash":"2fc22ce970b8f479510bc3b4688efcf218a56b1f","modified":1541511854566},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1541511854567},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1541511854572},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1541511854574}],"Category":[{"name":"JVM","_id":"cjo5sctap0002kg9ykinkc0s7"},{"name":"分布式","_id":"cjo5sctat0005kg9y1ds98h0e"},{"name":"Netty","_id":"cjo5sctav0009kg9y2kkfxzjj"},{"name":"Git","_id":"cjo5sctfy000mkg9yehsh02rf"},{"name":"面试","_id":"cjo5sctg6000ukg9y6iygv0a1"},{"name":"操作系统","_id":"cjo5scth80016kg9yppiqe0ui"}],"Data":[],"Page":[{"title":"about","date":"2018-07-23T08:09:42.000Z","type":"about","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-07-23 16:09:42\ntype: \"about\"\ncomments: false\n---\n","updated":"2018-09-28T01:59:28.866Z","path":"about/index.html","layout":"page","_id":"cjo5sctfq000gkg9yi14q5cyq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-07-23T08:10:37.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-07-23 16:10:37\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-09-28T01:59:28.867Z","path":"categories/index.html","layout":"page","_id":"cjo5sctft000ikg9ypjry5sbh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-07-23T08:10:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-07-23 16:10:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-09-28T01:59:28.867Z","path":"tags/index.html","layout":"page","_id":"cjo5sctfx000lkg9yhwa0b4l6","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Java堆外内存","date":"2018-09-28T11:43:57.000Z","_content":"\n# 为什么使用堆外内存\n\n- 来源于TaobaoJVM对OpenJDK定制开发的GCIH部分，其中GCIH就是将CMS Old Heap区的一部分划分出来，这部分内存虽然还在堆中，但是已经不被GC所管理，将长生命周期Java对象放在Java堆外，GC不能管理GCIH内Java对象。\n\n- 将长期存活的对象移入堆外内存，从而减少CMS管理的对象数量，降低Full GC的次数和频率，达到提高系统响应速度的目的。\n- 加快复制的速度：堆内在缓存到远程时，会先复制到直接内存，然后再发送，而堆外内存相当于省略了这个工作。\n- 这部分内容可以进程间共享，这样一台Server就都可以跑更多的VM实例。\n\n# 堆外内存的使用\n\nJDK1.4新加入NIO，引入了一种基于Channel与Buffer的I/O方式，可以使用Native函数库直接分配堆外内存。\n\n由JDK提供的","source":"_posts/Java堆外内存.md","raw":"---\ntitle: Java堆外内存\ndate: 2018-09-28 19:43:57\ntags: JVM\ncategory: JVM\n---\n\n# 为什么使用堆外内存\n\n- 来源于TaobaoJVM对OpenJDK定制开发的GCIH部分，其中GCIH就是将CMS Old Heap区的一部分划分出来，这部分内存虽然还在堆中，但是已经不被GC所管理，将长生命周期Java对象放在Java堆外，GC不能管理GCIH内Java对象。\n\n- 将长期存活的对象移入堆外内存，从而减少CMS管理的对象数量，降低Full GC的次数和频率，达到提高系统响应速度的目的。\n- 加快复制的速度：堆内在缓存到远程时，会先复制到直接内存，然后再发送，而堆外内存相当于省略了这个工作。\n- 这部分内容可以进程间共享，这样一台Server就都可以跑更多的VM实例。\n\n# 堆外内存的使用\n\nJDK1.4新加入NIO，引入了一种基于Channel与Buffer的I/O方式，可以使用Native函数库直接分配堆外内存。\n\n由JDK提供的","slug":"Java堆外内存","published":1,"updated":"2018-09-28T12:41:54.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctai0000kg9ykuz4t5v7","content":"<h1 id=\"为什么使用堆外内存\"><a href=\"#为什么使用堆外内存\" class=\"headerlink\" title=\"为什么使用堆外内存\"></a>为什么使用堆外内存</h1><ul>\n<li><p>来源于TaobaoJVM对OpenJDK定制开发的GCIH部分，其中GCIH就是将CMS Old Heap区的一部分划分出来，这部分内存虽然还在堆中，但是已经不被GC所管理，将长生命周期Java对象放在Java堆外，GC不能管理GCIH内Java对象。</p>\n</li>\n<li><p>将长期存活的对象移入堆外内存，从而减少CMS管理的对象数量，降低Full GC的次数和频率，达到提高系统响应速度的目的。</p>\n</li>\n<li>加快复制的速度：堆内在缓存到远程时，会先复制到直接内存，然后再发送，而堆外内存相当于省略了这个工作。</li>\n<li>这部分内容可以进程间共享，这样一台Server就都可以跑更多的VM实例。</li>\n</ul>\n<h1 id=\"堆外内存的使用\"><a href=\"#堆外内存的使用\" class=\"headerlink\" title=\"堆外内存的使用\"></a>堆外内存的使用</h1><p>JDK1.4新加入NIO，引入了一种基于Channel与Buffer的I/O方式，可以使用Native函数库直接分配堆外内存。</p>\n<p>由JDK提供的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"为什么使用堆外内存\"><a href=\"#为什么使用堆外内存\" class=\"headerlink\" title=\"为什么使用堆外内存\"></a>为什么使用堆外内存</h1><ul>\n<li><p>来源于TaobaoJVM对OpenJDK定制开发的GCIH部分，其中GCIH就是将CMS Old Heap区的一部分划分出来，这部分内存虽然还在堆中，但是已经不被GC所管理，将长生命周期Java对象放在Java堆外，GC不能管理GCIH内Java对象。</p>\n</li>\n<li><p>将长期存活的对象移入堆外内存，从而减少CMS管理的对象数量，降低Full GC的次数和频率，达到提高系统响应速度的目的。</p>\n</li>\n<li>加快复制的速度：堆内在缓存到远程时，会先复制到直接内存，然后再发送，而堆外内存相当于省略了这个工作。</li>\n<li>这部分内容可以进程间共享，这样一台Server就都可以跑更多的VM实例。</li>\n</ul>\n<h1 id=\"堆外内存的使用\"><a href=\"#堆外内存的使用\" class=\"headerlink\" title=\"堆外内存的使用\"></a>堆外内存的使用</h1><p>JDK1.4新加入NIO，引入了一种基于Channel与Buffer的I/O方式，可以使用Native函数库直接分配堆外内存。</p>\n<p>由JDK提供的</p>\n"},{"title":"SOA","date":"2018-07-27T01:01:10.000Z","_content":"\n# 基于TCP的RPC\n\n## 对象的序列化\n\n## 基于TCP协议实现RPC\n\n# 基于HTTP协议的RPC\n\n## HTTP协议栈\n\n## HTTP请求与响应\n\n## 通过HttpClient发送HTTP请求\n\n## JSON和XML\n\n## RESTful和RPC\n\n## 基于HTTP协议的RPC的实现\n\n# 服务的路由和负载均衡\n\n## 负载均衡算法\n\n1. 轮询(Round Robin)算法\n2. 随机法\n3. 原地址哈希法\n4. 加权轮询法\n5. 加权随机法\n6. 最小链接法\n\n","source":"_posts/SOA.md","raw":"---\ntitle: SOA\ndate: 2018-07-27 09:01:10\ntags: 分布式\ncategories: 分布式\n---\n\n# 基于TCP的RPC\n\n## 对象的序列化\n\n## 基于TCP协议实现RPC\n\n# 基于HTTP协议的RPC\n\n## HTTP协议栈\n\n## HTTP请求与响应\n\n## 通过HttpClient发送HTTP请求\n\n## JSON和XML\n\n## RESTful和RPC\n\n## 基于HTTP协议的RPC的实现\n\n# 服务的路由和负载均衡\n\n## 负载均衡算法\n\n1. 轮询(Round Robin)算法\n2. 随机法\n3. 原地址哈希法\n4. 加权轮询法\n5. 加权随机法\n6. 最小链接法\n\n","slug":"SOA","published":1,"updated":"2018-09-28T01:59:28.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctan0001kg9ygtg05yqz","content":"<h1 id=\"基于TCP的RPC\"><a href=\"#基于TCP的RPC\" class=\"headerlink\" title=\"基于TCP的RPC\"></a>基于TCP的RPC</h1><h2 id=\"对象的序列化\"><a href=\"#对象的序列化\" class=\"headerlink\" title=\"对象的序列化\"></a>对象的序列化</h2><h2 id=\"基于TCP协议实现RPC\"><a href=\"#基于TCP协议实现RPC\" class=\"headerlink\" title=\"基于TCP协议实现RPC\"></a>基于TCP协议实现RPC</h2><h1 id=\"基于HTTP协议的RPC\"><a href=\"#基于HTTP协议的RPC\" class=\"headerlink\" title=\"基于HTTP协议的RPC\"></a>基于HTTP协议的RPC</h1><h2 id=\"HTTP协议栈\"><a href=\"#HTTP协议栈\" class=\"headerlink\" title=\"HTTP协议栈\"></a>HTTP协议栈</h2><h2 id=\"HTTP请求与响应\"><a href=\"#HTTP请求与响应\" class=\"headerlink\" title=\"HTTP请求与响应\"></a>HTTP请求与响应</h2><h2 id=\"通过HttpClient发送HTTP请求\"><a href=\"#通过HttpClient发送HTTP请求\" class=\"headerlink\" title=\"通过HttpClient发送HTTP请求\"></a>通过HttpClient发送HTTP请求</h2><h2 id=\"JSON和XML\"><a href=\"#JSON和XML\" class=\"headerlink\" title=\"JSON和XML\"></a>JSON和XML</h2><h2 id=\"RESTful和RPC\"><a href=\"#RESTful和RPC\" class=\"headerlink\" title=\"RESTful和RPC\"></a>RESTful和RPC</h2><h2 id=\"基于HTTP协议的RPC的实现\"><a href=\"#基于HTTP协议的RPC的实现\" class=\"headerlink\" title=\"基于HTTP协议的RPC的实现\"></a>基于HTTP协议的RPC的实现</h2><h1 id=\"服务的路由和负载均衡\"><a href=\"#服务的路由和负载均衡\" class=\"headerlink\" title=\"服务的路由和负载均衡\"></a>服务的路由和负载均衡</h1><h2 id=\"负载均衡算法\"><a href=\"#负载均衡算法\" class=\"headerlink\" title=\"负载均衡算法\"></a>负载均衡算法</h2><ol>\n<li>轮询(Round Robin)算法</li>\n<li>随机法</li>\n<li>原地址哈希法</li>\n<li>加权轮询法</li>\n<li>加权随机法</li>\n<li>最小链接法</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基于TCP的RPC\"><a href=\"#基于TCP的RPC\" class=\"headerlink\" title=\"基于TCP的RPC\"></a>基于TCP的RPC</h1><h2 id=\"对象的序列化\"><a href=\"#对象的序列化\" class=\"headerlink\" title=\"对象的序列化\"></a>对象的序列化</h2><h2 id=\"基于TCP协议实现RPC\"><a href=\"#基于TCP协议实现RPC\" class=\"headerlink\" title=\"基于TCP协议实现RPC\"></a>基于TCP协议实现RPC</h2><h1 id=\"基于HTTP协议的RPC\"><a href=\"#基于HTTP协议的RPC\" class=\"headerlink\" title=\"基于HTTP协议的RPC\"></a>基于HTTP协议的RPC</h1><h2 id=\"HTTP协议栈\"><a href=\"#HTTP协议栈\" class=\"headerlink\" title=\"HTTP协议栈\"></a>HTTP协议栈</h2><h2 id=\"HTTP请求与响应\"><a href=\"#HTTP请求与响应\" class=\"headerlink\" title=\"HTTP请求与响应\"></a>HTTP请求与响应</h2><h2 id=\"通过HttpClient发送HTTP请求\"><a href=\"#通过HttpClient发送HTTP请求\" class=\"headerlink\" title=\"通过HttpClient发送HTTP请求\"></a>通过HttpClient发送HTTP请求</h2><h2 id=\"JSON和XML\"><a href=\"#JSON和XML\" class=\"headerlink\" title=\"JSON和XML\"></a>JSON和XML</h2><h2 id=\"RESTful和RPC\"><a href=\"#RESTful和RPC\" class=\"headerlink\" title=\"RESTful和RPC\"></a>RESTful和RPC</h2><h2 id=\"基于HTTP协议的RPC的实现\"><a href=\"#基于HTTP协议的RPC的实现\" class=\"headerlink\" title=\"基于HTTP协议的RPC的实现\"></a>基于HTTP协议的RPC的实现</h2><h1 id=\"服务的路由和负载均衡\"><a href=\"#服务的路由和负载均衡\" class=\"headerlink\" title=\"服务的路由和负载均衡\"></a>服务的路由和负载均衡</h1><h2 id=\"负载均衡算法\"><a href=\"#负载均衡算法\" class=\"headerlink\" title=\"负载均衡算法\"></a>负载均衡算法</h2><ol>\n<li>轮询(Round Robin)算法</li>\n<li>随机法</li>\n<li>原地址哈希法</li>\n<li>加权轮询法</li>\n<li>加权随机法</li>\n<li>最小链接法</li>\n</ol>\n"},{"title":"Netty入门","date":"2018-09-28T09:17:34.000Z","_content":"\n# 什么是Netty\n\n> Netty是一个利用Java的高级网络编程能力，隐藏器背后的复杂性而提供一个易于使用的框架。\n>\n> Netty是一个广泛使用的Java网络编程框架。\n>\n> 将JavaNIO进行了包装。\n\n","source":"_posts/Netty入门.md","raw":"---\ntitle: Netty入门\ndate: 2018-09-28 17:17:34\ntags: Netty\ncategories: Netty\n---\n\n# 什么是Netty\n\n> Netty是一个利用Java的高级网络编程能力，隐藏器背后的复杂性而提供一个易于使用的框架。\n>\n> Netty是一个广泛使用的Java网络编程框架。\n>\n> 将JavaNIO进行了包装。\n\n","slug":"Netty入门","published":1,"updated":"2018-09-28T09:18:25.351Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctar0004kg9ygxxmko8t","content":"<h1 id=\"什么是Netty\"><a href=\"#什么是Netty\" class=\"headerlink\" title=\"什么是Netty\"></a>什么是Netty</h1><blockquote>\n<p>Netty是一个利用Java的高级网络编程能力，隐藏器背后的复杂性而提供一个易于使用的框架。</p>\n<p>Netty是一个广泛使用的Java网络编程框架。</p>\n<p>将JavaNIO进行了包装。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是Netty\"><a href=\"#什么是Netty\" class=\"headerlink\" title=\"什么是Netty\"></a>什么是Netty</h1><blockquote>\n<p>Netty是一个利用Java的高级网络编程能力，隐藏器背后的复杂性而提供一个易于使用的框架。</p>\n<p>Netty是一个广泛使用的Java网络编程框架。</p>\n<p>将JavaNIO进行了包装。</p>\n</blockquote>\n"},{"title":"分布式入门","date":"2018-07-24T13:37:00.000Z","_content":"\n# 一、CAP\n\n分布式系统不可能同时满足一致性(C)、可用性(A)、分区容忍性(P)\n\n## 一致性\n\n\n\n## 可用性\n\n\n\n## 分区容忍性\n\n\n\n## 权衡\n\n在分布式系统中，分区容忍性必不可少，因为需要总是假设网络是不可靠的。因此，CAP理论实际上是要在可用性上和一致性上做权衡。\n\n# 二、BASE\n\n基本可用、软状态、最终一致性三个短语的缩写。\n\n# 三、2PC\n\n两阶段提交","source":"_posts/分布式入门.md","raw":"---\ntitle: 分布式入门\ndate: 2018-07-24 21:37:00\ntags: 分布式\ncategories: 分布式\n---\n\n# 一、CAP\n\n分布式系统不可能同时满足一致性(C)、可用性(A)、分区容忍性(P)\n\n## 一致性\n\n\n\n## 可用性\n\n\n\n## 分区容忍性\n\n\n\n## 权衡\n\n在分布式系统中，分区容忍性必不可少，因为需要总是假设网络是不可靠的。因此，CAP理论实际上是要在可用性上和一致性上做权衡。\n\n# 二、BASE\n\n基本可用、软状态、最终一致性三个短语的缩写。\n\n# 三、2PC\n\n两阶段提交","slug":"分布式入门","published":1,"updated":"2018-09-28T01:59:28.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctfp000fkg9ylv4k2lic","content":"<h1 id=\"一、CAP\"><a href=\"#一、CAP\" class=\"headerlink\" title=\"一、CAP\"></a>一、CAP</h1><p>分布式系统不可能同时满足一致性(C)、可用性(A)、分区容忍性(P)</p>\n<h2 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h2><h2 id=\"可用性\"><a href=\"#可用性\" class=\"headerlink\" title=\"可用性\"></a>可用性</h2><h2 id=\"分区容忍性\"><a href=\"#分区容忍性\" class=\"headerlink\" title=\"分区容忍性\"></a>分区容忍性</h2><h2 id=\"权衡\"><a href=\"#权衡\" class=\"headerlink\" title=\"权衡\"></a>权衡</h2><p>在分布式系统中，分区容忍性必不可少，因为需要总是假设网络是不可靠的。因此，CAP理论实际上是要在可用性上和一致性上做权衡。</p>\n<h1 id=\"二、BASE\"><a href=\"#二、BASE\" class=\"headerlink\" title=\"二、BASE\"></a>二、BASE</h1><p>基本可用、软状态、最终一致性三个短语的缩写。</p>\n<h1 id=\"三、2PC\"><a href=\"#三、2PC\" class=\"headerlink\" title=\"三、2PC\"></a>三、2PC</h1><p>两阶段提交</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一、CAP\"><a href=\"#一、CAP\" class=\"headerlink\" title=\"一、CAP\"></a>一、CAP</h1><p>分布式系统不可能同时满足一致性(C)、可用性(A)、分区容忍性(P)</p>\n<h2 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h2><h2 id=\"可用性\"><a href=\"#可用性\" class=\"headerlink\" title=\"可用性\"></a>可用性</h2><h2 id=\"分区容忍性\"><a href=\"#分区容忍性\" class=\"headerlink\" title=\"分区容忍性\"></a>分区容忍性</h2><h2 id=\"权衡\"><a href=\"#权衡\" class=\"headerlink\" title=\"权衡\"></a>权衡</h2><p>在分布式系统中，分区容忍性必不可少，因为需要总是假设网络是不可靠的。因此，CAP理论实际上是要在可用性上和一致性上做权衡。</p>\n<h1 id=\"二、BASE\"><a href=\"#二、BASE\" class=\"headerlink\" title=\"二、BASE\"></a>二、BASE</h1><p>基本可用、软状态、最终一致性三个短语的缩写。</p>\n<h1 id=\"三、2PC\"><a href=\"#三、2PC\" class=\"headerlink\" title=\"三、2PC\"></a>三、2PC</h1><p>两阶段提交</p>\n"},{"title":"Git分支","_content":"\n# Git分支 #\n\n## 1、分支简介 ##\n> 在进行提交操作时，Git 会保存一个提交对象（commit object）。知道了 Git 保存数据的方式，我们可以很自然的想到——该提交对象会包含一个指向暂存内容快照的指针。 但不仅仅是这样，该提交对象还包含了作者的姓名和邮箱、提交时输入的信息以及指向它的父对象的指针。首次提交产生的提交对象没有父对象，普通提交操作产生的提交对象有一个父对象，而由多个分支合并产生的提交对象有多个父对象，\n> \n> 为了更加形象地说明，我们假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用我们在 起步 中提到的 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：\n> \n    git add \n    git commit -m \"dfas\"\n\nGit的默认分支名字为master分支，他和其他分支完全没有区别，之所以每一个仓库都有一个master分支，是因为`git init`命令默认创建它。\n#### （1）分支创建 ####\n    git branch testing\n这会在当前所在的提交对象上创建一个指针。\nGit当前有个HEAD的特殊指针,指向当前所在的本地分支，`git branch`命令仅仅创建了一个分支，并不会自动切换到新分支去。\n\n可以用`git log`命令查看各个分支当前所指的对象，提供这一参数的是`--decorate`\n#### （2）分支切换 ####\n    git checkout testing\n这样HEAD就指向testing分支了\n\n**分支切换会改变你工作目录中的文件\n在切换分支时，一定要注意你工作目录里的文件会被改变。 如果是切换到一个较旧的分支，你的工作目录会恢复到该分支最后一次提交时的样子。 如果 Git 不能干净利落地完成这个任务，它将禁止切换分支。**\n\n#### （3）项目分叉历史 ####\n    git log --oneline --decorate --graph --all\n#### （4）分支的新建和合并 ####\n想要新建一个分支并同时切换到那个分支上，可以运行一个带有`-b`参数的`git checkout`命令：\n\n    git checkout -b iss53\n    switch to a new branch \"iss53\"\n\n上述两条命令的简写\n\n    git branch iss53\n    git checkout iss53\n#### （5）创建一个新分支指针 ####\n提交iss53下的所有修改，切换带master分支。\n\n    git checkout master\n    switch to branch 'master'\n\n将修改部署到直接上游的master分支，当master分支是要合并对象的上游，只需将指针右移，移动到合并对象处：\n\n    git checkout master\n    git merge hotfix\n\n#### （6）删除分支 ####\n    git branch -d hotfix\n\n切回到正在的工作继续工作：\n\n    git check iss53\n    switch to branch \"iss53\"\n\n#### （7）分支的合并 ####\n    git check master\n    Switch to branch 'master'\n    git merge iss53\n\nmaster不是iss53的直接祖先，这样不得不做一些额外的工作，Git会使用两个分支的末端所指的快照以及这两个分支的工作祖先，做一个简单的三方合并。\n\n既然你的修改已经合并进来了，你已经不再需要 iss53 分支了。 现在你可以在任务追踪系统中关闭此项任务，并删除这个分支。\n#### （8）遇到冲突时的分支合并 ####\n\n\n#### （9）分支管理 ####\n`git branch`不仅可以创建与删除分支，如果不加任何参数运行他，会得到当前所有分支的一个列表。带有`*`号的是当前所在的分支。如果要查看每一分支的最后一次提交，使用`git branch -v`命令。  \n`--merged`与`--no-merged`这两个选项以过滤这个列表中的已经合并和尚未合并到当前分支的分支。\n\n用`git branch -d`删除还未合并的工作会失败，可以用`-D`强制删除。\n## 2、分支工作流 ##\n#### （1）长期分支 ####\n> 因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些特性分支合并入其他分支中。\n> \n> 许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码——有可能仅仅是已经发布或即将发布的代码。 他们还有一些名为 develop 或者 next 的平行分支，被用来做后续开发或者测试稳定性——这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入 master 分支了。 这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多 bug 之后，就可以合并入主干分支中，等待下一次的发布。\n\n#### （2）特性分支 ####\n\n> 你已经在上一节中你创建的 iss53 和 hotfix 特性分支中看到过这种用法。 你在上一节用到的特性分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在特性分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度\n\n\n\n## 3、远程分支 ##\n\n> 远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 git ls-remote (remote) 来显式地获得远程引用的完整列表，或者通过 git remote show (remote) 获得远程分支的更多信息。 然而，一个更常见的做法是利用远程跟踪分支。\n\n\n\n> 远程跟踪分支是远程分支状态的引用。 它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。\n\n\n\n> 它们以 `(remote)/(branch)` 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 `origin/master` 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支；但是在服务器上的分支会指向 origin/iss53 的提交。\n\n\n\n> 这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 Git 服务器。 如果你从这里克隆，Git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。\n\n> 如果你在本地的 master 分支做了一些工作，然而在同一时间，其他人推送提交到 git.ourcompany.com 并更新了它的 master 分支，那么你的提交历史将向不同的方向前进。 也许，只要你不与 origin 服务器连接，你的 origin/master 指针就不会移动。\n> 如果要同步你的工作，运行 `git fetch origin` 命令。 这个命令查找 “origin” 是哪一个服务器，从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针指向新的、更新后的位置。\n\n\n\n> 当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步 - 你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。\n> 如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 `git push (remote) (branch）`。\n\n\n\n> **你也可以运行 git push origin serverfix:serverfix，它会做同样的事 - 相当于它说，“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。 如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。**\n> 下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用。\n> 要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支 - 只有一个不可以修改的 origin/serverfix 指针。\n> 可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上。\n\n**参考：**[http://git-scm.com](http://git-scm.com)","source":"_posts/Git分支.md","raw":"---\ntitle: Git分支\ntags: Git\ncategories: Git\n---\n\n# Git分支 #\n\n## 1、分支简介 ##\n> 在进行提交操作时，Git 会保存一个提交对象（commit object）。知道了 Git 保存数据的方式，我们可以很自然的想到——该提交对象会包含一个指向暂存内容快照的指针。 但不仅仅是这样，该提交对象还包含了作者的姓名和邮箱、提交时输入的信息以及指向它的父对象的指针。首次提交产生的提交对象没有父对象，普通提交操作产生的提交对象有一个父对象，而由多个分支合并产生的提交对象有多个父对象，\n> \n> 为了更加形象地说明，我们假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用我们在 起步 中提到的 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：\n> \n    git add \n    git commit -m \"dfas\"\n\nGit的默认分支名字为master分支，他和其他分支完全没有区别，之所以每一个仓库都有一个master分支，是因为`git init`命令默认创建它。\n#### （1）分支创建 ####\n    git branch testing\n这会在当前所在的提交对象上创建一个指针。\nGit当前有个HEAD的特殊指针,指向当前所在的本地分支，`git branch`命令仅仅创建了一个分支，并不会自动切换到新分支去。\n\n可以用`git log`命令查看各个分支当前所指的对象，提供这一参数的是`--decorate`\n#### （2）分支切换 ####\n    git checkout testing\n这样HEAD就指向testing分支了\n\n**分支切换会改变你工作目录中的文件\n在切换分支时，一定要注意你工作目录里的文件会被改变。 如果是切换到一个较旧的分支，你的工作目录会恢复到该分支最后一次提交时的样子。 如果 Git 不能干净利落地完成这个任务，它将禁止切换分支。**\n\n#### （3）项目分叉历史 ####\n    git log --oneline --decorate --graph --all\n#### （4）分支的新建和合并 ####\n想要新建一个分支并同时切换到那个分支上，可以运行一个带有`-b`参数的`git checkout`命令：\n\n    git checkout -b iss53\n    switch to a new branch \"iss53\"\n\n上述两条命令的简写\n\n    git branch iss53\n    git checkout iss53\n#### （5）创建一个新分支指针 ####\n提交iss53下的所有修改，切换带master分支。\n\n    git checkout master\n    switch to branch 'master'\n\n将修改部署到直接上游的master分支，当master分支是要合并对象的上游，只需将指针右移，移动到合并对象处：\n\n    git checkout master\n    git merge hotfix\n\n#### （6）删除分支 ####\n    git branch -d hotfix\n\n切回到正在的工作继续工作：\n\n    git check iss53\n    switch to branch \"iss53\"\n\n#### （7）分支的合并 ####\n    git check master\n    Switch to branch 'master'\n    git merge iss53\n\nmaster不是iss53的直接祖先，这样不得不做一些额外的工作，Git会使用两个分支的末端所指的快照以及这两个分支的工作祖先，做一个简单的三方合并。\n\n既然你的修改已经合并进来了，你已经不再需要 iss53 分支了。 现在你可以在任务追踪系统中关闭此项任务，并删除这个分支。\n#### （8）遇到冲突时的分支合并 ####\n\n\n#### （9）分支管理 ####\n`git branch`不仅可以创建与删除分支，如果不加任何参数运行他，会得到当前所有分支的一个列表。带有`*`号的是当前所在的分支。如果要查看每一分支的最后一次提交，使用`git branch -v`命令。  \n`--merged`与`--no-merged`这两个选项以过滤这个列表中的已经合并和尚未合并到当前分支的分支。\n\n用`git branch -d`删除还未合并的工作会失败，可以用`-D`强制删除。\n## 2、分支工作流 ##\n#### （1）长期分支 ####\n> 因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些特性分支合并入其他分支中。\n> \n> 许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码——有可能仅仅是已经发布或即将发布的代码。 他们还有一些名为 develop 或者 next 的平行分支，被用来做后续开发或者测试稳定性——这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入 master 分支了。 这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多 bug 之后，就可以合并入主干分支中，等待下一次的发布。\n\n#### （2）特性分支 ####\n\n> 你已经在上一节中你创建的 iss53 和 hotfix 特性分支中看到过这种用法。 你在上一节用到的特性分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在特性分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度\n\n\n\n## 3、远程分支 ##\n\n> 远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 git ls-remote (remote) 来显式地获得远程引用的完整列表，或者通过 git remote show (remote) 获得远程分支的更多信息。 然而，一个更常见的做法是利用远程跟踪分支。\n\n\n\n> 远程跟踪分支是远程分支状态的引用。 它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。\n\n\n\n> 它们以 `(remote)/(branch)` 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 `origin/master` 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支；但是在服务器上的分支会指向 origin/iss53 的提交。\n\n\n\n> 这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 Git 服务器。 如果你从这里克隆，Git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。\n\n> 如果你在本地的 master 分支做了一些工作，然而在同一时间，其他人推送提交到 git.ourcompany.com 并更新了它的 master 分支，那么你的提交历史将向不同的方向前进。 也许，只要你不与 origin 服务器连接，你的 origin/master 指针就不会移动。\n> 如果要同步你的工作，运行 `git fetch origin` 命令。 这个命令查找 “origin” 是哪一个服务器，从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针指向新的、更新后的位置。\n\n\n\n> 当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步 - 你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。\n> 如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 `git push (remote) (branch）`。\n\n\n\n> **你也可以运行 git push origin serverfix:serverfix，它会做同样的事 - 相当于它说，“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。 如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。**\n> 下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用。\n> 要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支 - 只有一个不可以修改的 origin/serverfix 指针。\n> 可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上。\n\n**参考：**[http://git-scm.com](http://git-scm.com)","slug":"Git分支","published":1,"date":"2018-09-28T01:59:28.862Z","updated":"2018-09-28T01:59:28.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctfs000hkg9y7ly9wf96","content":"<h1 id=\"Git分支\"><a href=\"#Git分支\" class=\"headerlink\" title=\"Git分支\"></a>Git分支</h1><h2 id=\"1、分支简介\"><a href=\"#1、分支简介\" class=\"headerlink\" title=\"1、分支简介\"></a>1、分支简介</h2><blockquote>\n<p>在进行提交操作时，Git 会保存一个提交对象（commit object）。知道了 Git 保存数据的方式，我们可以很自然的想到——该提交对象会包含一个指向暂存内容快照的指针。 但不仅仅是这样，该提交对象还包含了作者的姓名和邮箱、提交时输入的信息以及指向它的父对象的指针。首次提交产生的提交对象没有父对象，普通提交操作产生的提交对象有一个父对象，而由多个分支合并产生的提交对象有多个父对象，</p>\n<p>为了更加形象地说明，我们假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用我们在 起步 中提到的 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：</p>\n</blockquote>\n<pre><code>git add \ngit commit -m &quot;dfas&quot;\n</code></pre><p>Git的默认分支名字为master分支，他和其他分支完全没有区别，之所以每一个仓库都有一个master分支，是因为<code>git init</code>命令默认创建它。</p>\n<h4 id=\"（1）分支创建\"><a href=\"#（1）分支创建\" class=\"headerlink\" title=\"（1）分支创建\"></a>（1）分支创建</h4><pre><code>git branch testing\n</code></pre><p>这会在当前所在的提交对象上创建一个指针。<br>Git当前有个HEAD的特殊指针,指向当前所在的本地分支，<code>git branch</code>命令仅仅创建了一个分支，并不会自动切换到新分支去。</p>\n<p>可以用<code>git log</code>命令查看各个分支当前所指的对象，提供这一参数的是<code>--decorate</code></p>\n<h4 id=\"（2）分支切换\"><a href=\"#（2）分支切换\" class=\"headerlink\" title=\"（2）分支切换\"></a>（2）分支切换</h4><pre><code>git checkout testing\n</code></pre><p>这样HEAD就指向testing分支了</p>\n<p><strong>分支切换会改变你工作目录中的文件<br>在切换分支时，一定要注意你工作目录里的文件会被改变。 如果是切换到一个较旧的分支，你的工作目录会恢复到该分支最后一次提交时的样子。 如果 Git 不能干净利落地完成这个任务，它将禁止切换分支。</strong></p>\n<h4 id=\"（3）项目分叉历史\"><a href=\"#（3）项目分叉历史\" class=\"headerlink\" title=\"（3）项目分叉历史\"></a>（3）项目分叉历史</h4><pre><code>git log --oneline --decorate --graph --all\n</code></pre><h4 id=\"（4）分支的新建和合并\"><a href=\"#（4）分支的新建和合并\" class=\"headerlink\" title=\"（4）分支的新建和合并\"></a>（4）分支的新建和合并</h4><p>想要新建一个分支并同时切换到那个分支上，可以运行一个带有<code>-b</code>参数的<code>git checkout</code>命令：</p>\n<pre><code>git checkout -b iss53\nswitch to a new branch &quot;iss53&quot;\n</code></pre><p>上述两条命令的简写</p>\n<pre><code>git branch iss53\ngit checkout iss53\n</code></pre><h4 id=\"（5）创建一个新分支指针\"><a href=\"#（5）创建一个新分支指针\" class=\"headerlink\" title=\"（5）创建一个新分支指针\"></a>（5）创建一个新分支指针</h4><p>提交iss53下的所有修改，切换带master分支。</p>\n<pre><code>git checkout master\nswitch to branch &apos;master&apos;\n</code></pre><p>将修改部署到直接上游的master分支，当master分支是要合并对象的上游，只需将指针右移，移动到合并对象处：</p>\n<pre><code>git checkout master\ngit merge hotfix\n</code></pre><h4 id=\"（6）删除分支\"><a href=\"#（6）删除分支\" class=\"headerlink\" title=\"（6）删除分支\"></a>（6）删除分支</h4><pre><code>git branch -d hotfix\n</code></pre><p>切回到正在的工作继续工作：</p>\n<pre><code>git check iss53\nswitch to branch &quot;iss53&quot;\n</code></pre><h4 id=\"（7）分支的合并\"><a href=\"#（7）分支的合并\" class=\"headerlink\" title=\"（7）分支的合并\"></a>（7）分支的合并</h4><pre><code>git check master\nSwitch to branch &apos;master&apos;\ngit merge iss53\n</code></pre><p>master不是iss53的直接祖先，这样不得不做一些额外的工作，Git会使用两个分支的末端所指的快照以及这两个分支的工作祖先，做一个简单的三方合并。</p>\n<p>既然你的修改已经合并进来了，你已经不再需要 iss53 分支了。 现在你可以在任务追踪系统中关闭此项任务，并删除这个分支。</p>\n<h4 id=\"（8）遇到冲突时的分支合并\"><a href=\"#（8）遇到冲突时的分支合并\" class=\"headerlink\" title=\"（8）遇到冲突时的分支合并\"></a>（8）遇到冲突时的分支合并</h4><h4 id=\"（9）分支管理\"><a href=\"#（9）分支管理\" class=\"headerlink\" title=\"（9）分支管理\"></a>（9）分支管理</h4><p><code>git branch</code>不仅可以创建与删除分支，如果不加任何参数运行他，会得到当前所有分支的一个列表。带有<code>*</code>号的是当前所在的分支。如果要查看每一分支的最后一次提交，使用<code>git branch -v</code>命令。<br><code>--merged</code>与<code>--no-merged</code>这两个选项以过滤这个列表中的已经合并和尚未合并到当前分支的分支。</p>\n<p>用<code>git branch -d</code>删除还未合并的工作会失败，可以用<code>-D</code>强制删除。</p>\n<h2 id=\"2、分支工作流\"><a href=\"#2、分支工作流\" class=\"headerlink\" title=\"2、分支工作流\"></a>2、分支工作流</h2><h4 id=\"（1）长期分支\"><a href=\"#（1）长期分支\" class=\"headerlink\" title=\"（1）长期分支\"></a>（1）长期分支</h4><blockquote>\n<p>因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些特性分支合并入其他分支中。</p>\n<p>许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码——有可能仅仅是已经发布或即将发布的代码。 他们还有一些名为 develop 或者 next 的平行分支，被用来做后续开发或者测试稳定性——这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入 master 分支了。 这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多 bug 之后，就可以合并入主干分支中，等待下一次的发布。</p>\n</blockquote>\n<h4 id=\"（2）特性分支\"><a href=\"#（2）特性分支\" class=\"headerlink\" title=\"（2）特性分支\"></a>（2）特性分支</h4><blockquote>\n<p>你已经在上一节中你创建的 iss53 和 hotfix 特性分支中看到过这种用法。 你在上一节用到的特性分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在特性分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度</p>\n</blockquote>\n<h2 id=\"3、远程分支\"><a href=\"#3、远程分支\" class=\"headerlink\" title=\"3、远程分支\"></a>3、远程分支</h2><blockquote>\n<p>远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 git ls-remote (remote) 来显式地获得远程引用的完整列表，或者通过 git remote show (remote) 获得远程分支的更多信息。 然而，一个更常见的做法是利用远程跟踪分支。</p>\n</blockquote>\n<blockquote>\n<p>远程跟踪分支是远程分支状态的引用。 它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。</p>\n</blockquote>\n<blockquote>\n<p>它们以 <code>(remote)/(branch)</code> 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 <code>origin/master</code> 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支；但是在服务器上的分支会指向 origin/iss53 的提交。</p>\n</blockquote>\n<blockquote>\n<p>这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 Git 服务器。 如果你从这里克隆，Git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。</p>\n</blockquote>\n<blockquote>\n<p>如果你在本地的 master 分支做了一些工作，然而在同一时间，其他人推送提交到 git.ourcompany.com 并更新了它的 master 分支，那么你的提交历史将向不同的方向前进。 也许，只要你不与 origin 服务器连接，你的 origin/master 指针就不会移动。<br>如果要同步你的工作，运行 <code>git fetch origin</code> 命令。 这个命令查找 “origin” 是哪一个服务器，从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针指向新的、更新后的位置。</p>\n</blockquote>\n<blockquote>\n<p>当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步 - 你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。<br>如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 <code>git push (remote) (branch）</code>。</p>\n</blockquote>\n<blockquote>\n<p><strong>你也可以运行 git push origin serverfix:serverfix，它会做同样的事 - 相当于它说，“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。 如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。</strong><br>下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用。<br>要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支 - 只有一个不可以修改的 origin/serverfix 指针。<br>可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上。</p>\n</blockquote>\n<p><strong>参考：</strong><a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">http://git-scm.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git分支\"><a href=\"#Git分支\" class=\"headerlink\" title=\"Git分支\"></a>Git分支</h1><h2 id=\"1、分支简介\"><a href=\"#1、分支简介\" class=\"headerlink\" title=\"1、分支简介\"></a>1、分支简介</h2><blockquote>\n<p>在进行提交操作时，Git 会保存一个提交对象（commit object）。知道了 Git 保存数据的方式，我们可以很自然的想到——该提交对象会包含一个指向暂存内容快照的指针。 但不仅仅是这样，该提交对象还包含了作者的姓名和邮箱、提交时输入的信息以及指向它的父对象的指针。首次提交产生的提交对象没有父对象，普通提交操作产生的提交对象有一个父对象，而由多个分支合并产生的提交对象有多个父对象，</p>\n<p>为了更加形象地说明，我们假设现在有一个工作目录，里面包含了三个将要被暂存和提交的文件。 暂存操作会为每一个文件计算校验和（使用我们在 起步 中提到的 SHA-1 哈希算法），然后会把当前版本的文件快照保存到 Git 仓库中（Git 使用 blob 对象来保存它们），最终将校验和加入到暂存区域等待提交：</p>\n</blockquote>\n<pre><code>git add \ngit commit -m &quot;dfas&quot;\n</code></pre><p>Git的默认分支名字为master分支，他和其他分支完全没有区别，之所以每一个仓库都有一个master分支，是因为<code>git init</code>命令默认创建它。</p>\n<h4 id=\"（1）分支创建\"><a href=\"#（1）分支创建\" class=\"headerlink\" title=\"（1）分支创建\"></a>（1）分支创建</h4><pre><code>git branch testing\n</code></pre><p>这会在当前所在的提交对象上创建一个指针。<br>Git当前有个HEAD的特殊指针,指向当前所在的本地分支，<code>git branch</code>命令仅仅创建了一个分支，并不会自动切换到新分支去。</p>\n<p>可以用<code>git log</code>命令查看各个分支当前所指的对象，提供这一参数的是<code>--decorate</code></p>\n<h4 id=\"（2）分支切换\"><a href=\"#（2）分支切换\" class=\"headerlink\" title=\"（2）分支切换\"></a>（2）分支切换</h4><pre><code>git checkout testing\n</code></pre><p>这样HEAD就指向testing分支了</p>\n<p><strong>分支切换会改变你工作目录中的文件<br>在切换分支时，一定要注意你工作目录里的文件会被改变。 如果是切换到一个较旧的分支，你的工作目录会恢复到该分支最后一次提交时的样子。 如果 Git 不能干净利落地完成这个任务，它将禁止切换分支。</strong></p>\n<h4 id=\"（3）项目分叉历史\"><a href=\"#（3）项目分叉历史\" class=\"headerlink\" title=\"（3）项目分叉历史\"></a>（3）项目分叉历史</h4><pre><code>git log --oneline --decorate --graph --all\n</code></pre><h4 id=\"（4）分支的新建和合并\"><a href=\"#（4）分支的新建和合并\" class=\"headerlink\" title=\"（4）分支的新建和合并\"></a>（4）分支的新建和合并</h4><p>想要新建一个分支并同时切换到那个分支上，可以运行一个带有<code>-b</code>参数的<code>git checkout</code>命令：</p>\n<pre><code>git checkout -b iss53\nswitch to a new branch &quot;iss53&quot;\n</code></pre><p>上述两条命令的简写</p>\n<pre><code>git branch iss53\ngit checkout iss53\n</code></pre><h4 id=\"（5）创建一个新分支指针\"><a href=\"#（5）创建一个新分支指针\" class=\"headerlink\" title=\"（5）创建一个新分支指针\"></a>（5）创建一个新分支指针</h4><p>提交iss53下的所有修改，切换带master分支。</p>\n<pre><code>git checkout master\nswitch to branch &apos;master&apos;\n</code></pre><p>将修改部署到直接上游的master分支，当master分支是要合并对象的上游，只需将指针右移，移动到合并对象处：</p>\n<pre><code>git checkout master\ngit merge hotfix\n</code></pre><h4 id=\"（6）删除分支\"><a href=\"#（6）删除分支\" class=\"headerlink\" title=\"（6）删除分支\"></a>（6）删除分支</h4><pre><code>git branch -d hotfix\n</code></pre><p>切回到正在的工作继续工作：</p>\n<pre><code>git check iss53\nswitch to branch &quot;iss53&quot;\n</code></pre><h4 id=\"（7）分支的合并\"><a href=\"#（7）分支的合并\" class=\"headerlink\" title=\"（7）分支的合并\"></a>（7）分支的合并</h4><pre><code>git check master\nSwitch to branch &apos;master&apos;\ngit merge iss53\n</code></pre><p>master不是iss53的直接祖先，这样不得不做一些额外的工作，Git会使用两个分支的末端所指的快照以及这两个分支的工作祖先，做一个简单的三方合并。</p>\n<p>既然你的修改已经合并进来了，你已经不再需要 iss53 分支了。 现在你可以在任务追踪系统中关闭此项任务，并删除这个分支。</p>\n<h4 id=\"（8）遇到冲突时的分支合并\"><a href=\"#（8）遇到冲突时的分支合并\" class=\"headerlink\" title=\"（8）遇到冲突时的分支合并\"></a>（8）遇到冲突时的分支合并</h4><h4 id=\"（9）分支管理\"><a href=\"#（9）分支管理\" class=\"headerlink\" title=\"（9）分支管理\"></a>（9）分支管理</h4><p><code>git branch</code>不仅可以创建与删除分支，如果不加任何参数运行他，会得到当前所有分支的一个列表。带有<code>*</code>号的是当前所在的分支。如果要查看每一分支的最后一次提交，使用<code>git branch -v</code>命令。<br><code>--merged</code>与<code>--no-merged</code>这两个选项以过滤这个列表中的已经合并和尚未合并到当前分支的分支。</p>\n<p>用<code>git branch -d</code>删除还未合并的工作会失败，可以用<code>-D</code>强制删除。</p>\n<h2 id=\"2、分支工作流\"><a href=\"#2、分支工作流\" class=\"headerlink\" title=\"2、分支工作流\"></a>2、分支工作流</h2><h4 id=\"（1）长期分支\"><a href=\"#（1）长期分支\" class=\"headerlink\" title=\"（1）长期分支\"></a>（1）长期分支</h4><blockquote>\n<p>因为 Git 使用简单的三方合并，所以就算在一段较长的时间内，反复把一个分支合并入另一个分支，也不是什么难事。 也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支；你可以定期地把某些特性分支合并入其他分支中。</p>\n<p>许多使用 Git 的开发者都喜欢使用这种方式来工作，比如只在 master 分支上保留完全稳定的代码——有可能仅仅是已经发布或即将发布的代码。 他们还有一些名为 develop 或者 next 的平行分支，被用来做后续开发或者测试稳定性——这些分支不必保持绝对稳定，但是一旦达到稳定状态，它们就可以被合并入 master 分支了。 这样，在确保这些已完成的特性分支（短期分支，比如之前的 iss53 分支）能够通过所有测试，并且不会引入更多 bug 之后，就可以合并入主干分支中，等待下一次的发布。</p>\n</blockquote>\n<h4 id=\"（2）特性分支\"><a href=\"#（2）特性分支\" class=\"headerlink\" title=\"（2）特性分支\"></a>（2）特性分支</h4><blockquote>\n<p>你已经在上一节中你创建的 iss53 和 hotfix 特性分支中看到过这种用法。 你在上一节用到的特性分支（iss53 和 hotfix 分支）中提交了一些更新，并且在它们合并入主干分支之后，你又删除了它们。 这项技术能使你快速并且完整地进行上下文切换（context-switch）——因为你的工作被分散到不同的流水线中，在不同的流水线中每个分支都仅与其目标特性相关，因此，在做代码审查之类的工作的时候就能更加容易地看出你做了哪些改动。 你可以把做出的改动在特性分支中保留几分钟、几天甚至几个月，等它们成熟之后再合并，而不用在乎它们建立的顺序或工作进度</p>\n</blockquote>\n<h2 id=\"3、远程分支\"><a href=\"#3、远程分支\" class=\"headerlink\" title=\"3、远程分支\"></a>3、远程分支</h2><blockquote>\n<p>远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 git ls-remote (remote) 来显式地获得远程引用的完整列表，或者通过 git remote show (remote) 获得远程分支的更多信息。 然而，一个更常见的做法是利用远程跟踪分支。</p>\n</blockquote>\n<blockquote>\n<p>远程跟踪分支是远程分支状态的引用。 它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。</p>\n</blockquote>\n<blockquote>\n<p>它们以 <code>(remote)/(branch)</code> 形式命名。 例如，如果你想要看你最后一次与远程仓库 origin 通信时 master 分支的状态，你可以查看 <code>origin/master</code> 分支。 你与同事合作解决一个问题并且他们推送了一个 iss53 分支，你可能有自己的本地 iss53 分支；但是在服务器上的分支会指向 origin/iss53 的提交。</p>\n</blockquote>\n<blockquote>\n<p>这可能有一点儿难以理解，让我们来看一个例子。 假设你的网络里有一个在 git.ourcompany.com 的 Git 服务器。 如果你从这里克隆，Git 的 clone 命令会为你自动将其命名为 origin，拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。 Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支，这样你就有工作的基础。</p>\n</blockquote>\n<blockquote>\n<p>如果你在本地的 master 分支做了一些工作，然而在同一时间，其他人推送提交到 git.ourcompany.com 并更新了它的 master 分支，那么你的提交历史将向不同的方向前进。 也许，只要你不与 origin 服务器连接，你的 origin/master 指针就不会移动。<br>如果要同步你的工作，运行 <code>git fetch origin</code> 命令。 这个命令查找 “origin” 是哪一个服务器，从中抓取本地没有的数据，并且更新本地数据库，移动 origin/master 指针指向新的、更新后的位置。</p>\n</blockquote>\n<blockquote>\n<p>当你想要公开分享一个分支时，需要将其推送到有写入权限的远程仓库上。 本地的分支并不会自动与远程仓库同步 - 你必须显式地推送想要分享的分支。 这样，你就可以把不愿意分享的内容放到私人分支上，而将需要和别人协作的内容推送到公开分支。<br>如果希望和别人一起在名为 serverfix 的分支上工作，你可以像推送第一个分支那样推送它。 运行 <code>git push (remote) (branch）</code>。</p>\n</blockquote>\n<blockquote>\n<p><strong>你也可以运行 git push origin serverfix:serverfix，它会做同样的事 - 相当于它说，“推送本地的 serverfix 分支，将其作为远程仓库的 serverfix 分支” 可以通过这种格式来推送本地分支到一个命名不相同的远程分支。 如果并不想让远程仓库上的分支叫做 serverfix，可以运行 git push origin serverfix:awesomebranch 来将本地的 serverfix 分支推送到远程仓库上的 awesomebranch 分支。</strong><br>下一次其他协作者从服务器上抓取数据时，他们会在本地生成一个远程分支 origin/serverfix，指向服务器的 serverfix 分支的引用。<br>要特别注意的一点是当抓取到新的远程跟踪分支时，本地不会自动生成一份可编辑的副本（拷贝）。 换一句话说，这种情况下，不会有一个新的 serverfix 分支 - 只有一个不可以修改的 origin/serverfix 指针。<br>可以运行 git merge origin/serverfix 将这些工作合并到当前所在的分支。 如果想要在自己的 serverfix 分支上工作，可以将其建立在远程跟踪分支之上。</p>\n</blockquote>\n<p><strong>参考：</strong><a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">http://git-scm.com</a></p>\n"},{"title":"Git基础","_content":"\n# Git基础 #\n\n## 1、获取Git仓库\n\n#### （1）在现有目录下初始化仓库\n\n    git init\n该命令将创建一个名为.git的目录，这个字目录含有初始化的Git仓库中所有的必须文件，这些文件是Git仓库的骨干。但是这个时候只是做了一个初始化的操作。\n#### （2）克隆现有的仓库\n\n如果想参与某个项目的开发，贡献自己的一份力，这是需要用`git clone`命令，clone是负值Git仓库服务器上的几乎所有数据，不仅仅是复制文件，执行`git clone`命令的时候，默认复制远程仓库每一个文件的每一个版本（分支）都将被拉取下来。\n\n    git clone [url]\n\nGit支持多种传输协议：`http://`协议，`git://`协议，`SSH`传输协议\n## 2、记录每次更新到仓库\n>现在我们手上有了一个真实项目的 Git 仓库，并从这个仓库中取出了所有文件的工作拷贝。 接下来，对这些文件做些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。\n\n>请记住，你工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。 已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。 工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。 初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。\n\n>编辑过某些文件之后，由于自上次提交后你对它们做了修改，Git 将它们标记为已修改文件。 我们逐步将这些修改过的文件放入暂存区，然后提交所有暂存了的修改，如此反复。所以使用Git时文件的生命周期如下：  \n>\n>![git生命周期.png](/img/Git/git生命周期.png)\n\n#### （1）检查文件状态\n检查文件处于什么状态，用`git status`命令。\n当克隆玩仓库后使用此命令，会提示工作目录非常干净，意思是已跟踪文件最近没有被修改过，并且目录下没有出现处于任何跟踪状态的新文件，否则Git会列出来。\n#### （2）跟踪新文件 ####\n    git add 文件名\n#### （3）暂存已修改文件 ####\n    git add\n这是一个多功能命令：\n\n-  开始跟踪新文件\n-  把已跟踪的文件放在暂存区\n-  用于合并时把有冲突的文件标记为已解决状态等\n\n将这个命令理解为“添加内容到下一次提交出”而不是“将一个文件添加到项目中”要更加合适。\n#### （4）忽略文件 ####\n一般有些文件不需要纳入Git的管理，不希望他们总出现在未跟踪文件列表，比如日志文件啊。这时可以创建一个名为`.gitignore`的文件，列出要忽略的文件模式。\n\n    $cat.gitignore\n    *.[oa]\n    *~\n>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副本。 此外，你可能还需要忽略 log，tmp 或者 pid 目录，以及自动生成的文档等等。 要养成一开始就设置好 .gitignore 文件的习惯，以免将来误提交这类无用的文件。\n\n#### （4）查看暂存和未暂存的修改 ####\n    git diff //修改之后还没有暂存起来的变化内容。\n    git diff --cached //工作目录中当前文件和暂存区域快照之间的差异\n#### （5）提交更新 ####\n    git commit\n#### （6）跳过暂存区域 ####\n尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。 Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 `git commit` 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 `git add `步骤。\n#### （7）移除文件 ####\n如果删除在“未暂存清单”的文件：\n\n    git status\n    git rm 文件名\n另外一种情况是，我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 为达到这一目的，使用 `--cached` 选项：\n\n    $ git rm --cached README\n\n## 3、查看提交历史 ##\n    git log\n默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。 正如你所看到的，这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明。\n\n`git log ` 有许多选项可以帮助你搜寻你所要找的提交\n\n\n\n- -p   用来显示每次提交的内容差异，也可以再加上-2来仅显示最近两次提交。\n- --stat 如果想看到每次提交的简略的统计信息。\n\n## 4、撤销操作 ##\n\n#### （1）撤消操作 ####\n    git commit -amend //这个命令会将暂存区的文件提交。如果自  \n    上次提交以来你未做任何修改，那么快照会保持不变，而你所修改 \n    的知识提交信息\n#### （2）取消暂存的文件 ####\n    git reset HEAD 文件名\n#### （3）撤销对文件的修改 ####\n    git checkout -- 文件名\n## 5、远程仓库的使用 ##\n#### （1）查看远程仓库 ####\n如果想查看已经配置的远程仓库服务器，可以运行`git remote`命令，他会列出你指定的每一个远程服务器的简写。\n也可以指定选项`-v`，会显示需要读写远程仓库使用的Git保存的简写与其对应的URL。\n#### （2）添加远程仓库 ####\n    $ git remote\n    origin\n    $ git remote add pb https://github.com/paulboone/ticgit//添加远程仓库\n    $ git remote -v\n    origin\thttps://github.com/schacon/ticgit (fetch)\n    origin\thttps://github.com/schacon/ticgit (push)\n    pb\thttps://github.com/paulboone/ticgit (fetch)\n    pb\thttps://github.com/paulboone/ticgit (push)\n现在可以在命令行使用字符串pb来代替整个URL。\n例如，想要拉取Paul的仓库中有但你没有的信息，可以运行`git fetch pb`\n#### (3)从远程仓库中抓取和拉取 ####\n从远程仓库中获得数据，可以执行\n    git fetch [remote-name]\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。执行完成后，你将会拥有那个远程仓库中所有的分支引用，可以随时合并查看。\n\n如果使用`clone`命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以\"origin\"为简写。\n注意\"fetch\"命令会将数据拉取到你的本地仓库，但并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。  \n\n如果你有一个分支设置为跟踪一个远程分支，可以使用`git pull`命令来自动抓取然后合并远程分支到当前分支。\n#### （4）推送到远程仓库 ####\n当你想分享你的项目时，必须将其推送到上游：\n\n    git push [remote-name] [branch-name]\n\n当你想将master分支推送到origin服务器时，运行如下命令可以将你所做的备份到服务器\n\n    git push origin master\n\n#### （5）查看远程仓库 ####\n如果想要查看某一个远程仓库的信息，可以使用  \n    `git remote show [remote-name]`  \n\n#### （6）远程仓库的移除和重命名 ####\n如果想要重命名引用的名字可以运行`git remote  rename`去修改一个远程仓库的简写名 。\n\n如果因为一些原因想要移除一个远程仓库：\n    git remote rm 仓库名  \n\n## 6、打标签 ##\n#### （1）列出标签 ####\n\n    git tag \n\n#### （2）创建标签 ####\n- 附注标签：`git tag -a v1.4 -m 'my version 1.4'`\n- 轻量标签：`git tag v1.4-lw //不需要使用-a -s 或 -m选项，只需要提供标签名字`\n\n#### （3）后期打标签 ####\n    git tag -a v1.2 部分校验和\n#### （4）共享标签 ####\n默认情况下，`git push`命令并不会传送标签到远程仓库服务器上，在创建完标签后你必须显示的推送标签到共享服务器上，这个时候就像共享远程分支一样，可以运行：  \n\n    git push origin [tagname]  \n\n## 7、Git别名 ##\n为每一个命令设置别名，比如：\n      \n    git config -global alias.co checkout\n\ncommit用ci来代替  \n\n**参考**：[http://git-scm.com](http://git-scm.com)\n    \n\n\n​    ","source":"_posts/Git基础.md","raw":"---\ntitle: Git基础\ntags: Git\ncategories: Git\n---\n\n# Git基础 #\n\n## 1、获取Git仓库\n\n#### （1）在现有目录下初始化仓库\n\n    git init\n该命令将创建一个名为.git的目录，这个字目录含有初始化的Git仓库中所有的必须文件，这些文件是Git仓库的骨干。但是这个时候只是做了一个初始化的操作。\n#### （2）克隆现有的仓库\n\n如果想参与某个项目的开发，贡献自己的一份力，这是需要用`git clone`命令，clone是负值Git仓库服务器上的几乎所有数据，不仅仅是复制文件，执行`git clone`命令的时候，默认复制远程仓库每一个文件的每一个版本（分支）都将被拉取下来。\n\n    git clone [url]\n\nGit支持多种传输协议：`http://`协议，`git://`协议，`SSH`传输协议\n## 2、记录每次更新到仓库\n>现在我们手上有了一个真实项目的 Git 仓库，并从这个仓库中取出了所有文件的工作拷贝。 接下来，对这些文件做些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。\n\n>请记住，你工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。 已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。 工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。 初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。\n\n>编辑过某些文件之后，由于自上次提交后你对它们做了修改，Git 将它们标记为已修改文件。 我们逐步将这些修改过的文件放入暂存区，然后提交所有暂存了的修改，如此反复。所以使用Git时文件的生命周期如下：  \n>\n>![git生命周期.png](/img/Git/git生命周期.png)\n\n#### （1）检查文件状态\n检查文件处于什么状态，用`git status`命令。\n当克隆玩仓库后使用此命令，会提示工作目录非常干净，意思是已跟踪文件最近没有被修改过，并且目录下没有出现处于任何跟踪状态的新文件，否则Git会列出来。\n#### （2）跟踪新文件 ####\n    git add 文件名\n#### （3）暂存已修改文件 ####\n    git add\n这是一个多功能命令：\n\n-  开始跟踪新文件\n-  把已跟踪的文件放在暂存区\n-  用于合并时把有冲突的文件标记为已解决状态等\n\n将这个命令理解为“添加内容到下一次提交出”而不是“将一个文件添加到项目中”要更加合适。\n#### （4）忽略文件 ####\n一般有些文件不需要纳入Git的管理，不希望他们总出现在未跟踪文件列表，比如日志文件啊。这时可以创建一个名为`.gitignore`的文件，列出要忽略的文件模式。\n\n    $cat.gitignore\n    *.[oa]\n    *~\n>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副本。 此外，你可能还需要忽略 log，tmp 或者 pid 目录，以及自动生成的文档等等。 要养成一开始就设置好 .gitignore 文件的习惯，以免将来误提交这类无用的文件。\n\n#### （4）查看暂存和未暂存的修改 ####\n    git diff //修改之后还没有暂存起来的变化内容。\n    git diff --cached //工作目录中当前文件和暂存区域快照之间的差异\n#### （5）提交更新 ####\n    git commit\n#### （6）跳过暂存区域 ####\n尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。 Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 `git commit` 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 `git add `步骤。\n#### （7）移除文件 ####\n如果删除在“未暂存清单”的文件：\n\n    git status\n    git rm 文件名\n另外一种情况是，我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 为达到这一目的，使用 `--cached` 选项：\n\n    $ git rm --cached README\n\n## 3、查看提交历史 ##\n    git log\n默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。 正如你所看到的，这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明。\n\n`git log ` 有许多选项可以帮助你搜寻你所要找的提交\n\n\n\n- -p   用来显示每次提交的内容差异，也可以再加上-2来仅显示最近两次提交。\n- --stat 如果想看到每次提交的简略的统计信息。\n\n## 4、撤销操作 ##\n\n#### （1）撤消操作 ####\n    git commit -amend //这个命令会将暂存区的文件提交。如果自  \n    上次提交以来你未做任何修改，那么快照会保持不变，而你所修改 \n    的知识提交信息\n#### （2）取消暂存的文件 ####\n    git reset HEAD 文件名\n#### （3）撤销对文件的修改 ####\n    git checkout -- 文件名\n## 5、远程仓库的使用 ##\n#### （1）查看远程仓库 ####\n如果想查看已经配置的远程仓库服务器，可以运行`git remote`命令，他会列出你指定的每一个远程服务器的简写。\n也可以指定选项`-v`，会显示需要读写远程仓库使用的Git保存的简写与其对应的URL。\n#### （2）添加远程仓库 ####\n    $ git remote\n    origin\n    $ git remote add pb https://github.com/paulboone/ticgit//添加远程仓库\n    $ git remote -v\n    origin\thttps://github.com/schacon/ticgit (fetch)\n    origin\thttps://github.com/schacon/ticgit (push)\n    pb\thttps://github.com/paulboone/ticgit (fetch)\n    pb\thttps://github.com/paulboone/ticgit (push)\n现在可以在命令行使用字符串pb来代替整个URL。\n例如，想要拉取Paul的仓库中有但你没有的信息，可以运行`git fetch pb`\n#### (3)从远程仓库中抓取和拉取 ####\n从远程仓库中获得数据，可以执行\n    git fetch [remote-name]\n这个命令会访问远程仓库，从中拉取所有你还没有的数据。执行完成后，你将会拥有那个远程仓库中所有的分支引用，可以随时合并查看。\n\n如果使用`clone`命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以\"origin\"为简写。\n注意\"fetch\"命令会将数据拉取到你的本地仓库，但并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。  \n\n如果你有一个分支设置为跟踪一个远程分支，可以使用`git pull`命令来自动抓取然后合并远程分支到当前分支。\n#### （4）推送到远程仓库 ####\n当你想分享你的项目时，必须将其推送到上游：\n\n    git push [remote-name] [branch-name]\n\n当你想将master分支推送到origin服务器时，运行如下命令可以将你所做的备份到服务器\n\n    git push origin master\n\n#### （5）查看远程仓库 ####\n如果想要查看某一个远程仓库的信息，可以使用  \n    `git remote show [remote-name]`  \n\n#### （6）远程仓库的移除和重命名 ####\n如果想要重命名引用的名字可以运行`git remote  rename`去修改一个远程仓库的简写名 。\n\n如果因为一些原因想要移除一个远程仓库：\n    git remote rm 仓库名  \n\n## 6、打标签 ##\n#### （1）列出标签 ####\n\n    git tag \n\n#### （2）创建标签 ####\n- 附注标签：`git tag -a v1.4 -m 'my version 1.4'`\n- 轻量标签：`git tag v1.4-lw //不需要使用-a -s 或 -m选项，只需要提供标签名字`\n\n#### （3）后期打标签 ####\n    git tag -a v1.2 部分校验和\n#### （4）共享标签 ####\n默认情况下，`git push`命令并不会传送标签到远程仓库服务器上，在创建完标签后你必须显示的推送标签到共享服务器上，这个时候就像共享远程分支一样，可以运行：  \n\n    git push origin [tagname]  \n\n## 7、Git别名 ##\n为每一个命令设置别名，比如：\n      \n    git config -global alias.co checkout\n\ncommit用ci来代替  \n\n**参考**：[http://git-scm.com](http://git-scm.com)\n    \n\n\n​    ","slug":"Git基础","published":1,"date":"2018-09-28T01:59:28.862Z","updated":"2018-09-28T11:25:53.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctfw000kkg9ygmvo84hn","content":"<h1 id=\"Git基础\"><a href=\"#Git基础\" class=\"headerlink\" title=\"Git基础\"></a>Git基础</h1><h2 id=\"1、获取Git仓库\"><a href=\"#1、获取Git仓库\" class=\"headerlink\" title=\"1、获取Git仓库\"></a>1、获取Git仓库</h2><h4 id=\"（1）在现有目录下初始化仓库\"><a href=\"#（1）在现有目录下初始化仓库\" class=\"headerlink\" title=\"（1）在现有目录下初始化仓库\"></a>（1）在现有目录下初始化仓库</h4><pre><code>git init\n</code></pre><p>该命令将创建一个名为.git的目录，这个字目录含有初始化的Git仓库中所有的必须文件，这些文件是Git仓库的骨干。但是这个时候只是做了一个初始化的操作。</p>\n<h4 id=\"（2）克隆现有的仓库\"><a href=\"#（2）克隆现有的仓库\" class=\"headerlink\" title=\"（2）克隆现有的仓库\"></a>（2）克隆现有的仓库</h4><p>如果想参与某个项目的开发，贡献自己的一份力，这是需要用<code>git clone</code>命令，clone是负值Git仓库服务器上的几乎所有数据，不仅仅是复制文件，执行<code>git clone</code>命令的时候，默认复制远程仓库每一个文件的每一个版本（分支）都将被拉取下来。</p>\n<pre><code>git clone [url]\n</code></pre><p>Git支持多种传输协议：<code>http://</code>协议，<code>git://</code>协议，<code>SSH</code>传输协议</p>\n<h2 id=\"2、记录每次更新到仓库\"><a href=\"#2、记录每次更新到仓库\" class=\"headerlink\" title=\"2、记录每次更新到仓库\"></a>2、记录每次更新到仓库</h2><blockquote>\n<p>现在我们手上有了一个真实项目的 Git 仓库，并从这个仓库中取出了所有文件的工作拷贝。 接下来，对这些文件做些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。</p>\n</blockquote>\n<blockquote>\n<p>请记住，你工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。 已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。 工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。 初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。</p>\n</blockquote>\n<blockquote>\n<p>编辑过某些文件之后，由于自上次提交后你对它们做了修改，Git 将它们标记为已修改文件。 我们逐步将这些修改过的文件放入暂存区，然后提交所有暂存了的修改，如此反复。所以使用Git时文件的生命周期如下：  </p>\n<p><img src=\"/img/Git/git生命周期.png\" alt=\"git生命周期.png\"></p>\n</blockquote>\n<h4 id=\"（1）检查文件状态\"><a href=\"#（1）检查文件状态\" class=\"headerlink\" title=\"（1）检查文件状态\"></a>（1）检查文件状态</h4><p>检查文件处于什么状态，用<code>git status</code>命令。<br>当克隆玩仓库后使用此命令，会提示工作目录非常干净，意思是已跟踪文件最近没有被修改过，并且目录下没有出现处于任何跟踪状态的新文件，否则Git会列出来。</p>\n<h4 id=\"（2）跟踪新文件\"><a href=\"#（2）跟踪新文件\" class=\"headerlink\" title=\"（2）跟踪新文件\"></a>（2）跟踪新文件</h4><pre><code>git add 文件名\n</code></pre><h4 id=\"（3）暂存已修改文件\"><a href=\"#（3）暂存已修改文件\" class=\"headerlink\" title=\"（3）暂存已修改文件\"></a>（3）暂存已修改文件</h4><pre><code>git add\n</code></pre><p>这是一个多功能命令：</p>\n<ul>\n<li>开始跟踪新文件</li>\n<li>把已跟踪的文件放在暂存区</li>\n<li>用于合并时把有冲突的文件标记为已解决状态等</li>\n</ul>\n<p>将这个命令理解为“添加内容到下一次提交出”而不是“将一个文件添加到项目中”要更加合适。</p>\n<h4 id=\"（4）忽略文件\"><a href=\"#（4）忽略文件\" class=\"headerlink\" title=\"（4）忽略文件\"></a>（4）忽略文件</h4><p>一般有些文件不需要纳入Git的管理，不希望他们总出现在未跟踪文件列表，比如日志文件啊。这时可以创建一个名为<code>.gitignore</code>的文件，列出要忽略的文件模式。</p>\n<pre><code>$cat.gitignore\n*.[oa]\n*~\n</code></pre><blockquote>\n<p>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副本。 此外，你可能还需要忽略 log，tmp 或者 pid 目录，以及自动生成的文档等等。 要养成一开始就设置好 .gitignore 文件的习惯，以免将来误提交这类无用的文件。</p>\n</blockquote>\n<h4 id=\"（4）查看暂存和未暂存的修改\"><a href=\"#（4）查看暂存和未暂存的修改\" class=\"headerlink\" title=\"（4）查看暂存和未暂存的修改\"></a>（4）查看暂存和未暂存的修改</h4><pre><code>git diff //修改之后还没有暂存起来的变化内容。\ngit diff --cached //工作目录中当前文件和暂存区域快照之间的差异\n</code></pre><h4 id=\"（5）提交更新\"><a href=\"#（5）提交更新\" class=\"headerlink\" title=\"（5）提交更新\"></a>（5）提交更新</h4><pre><code>git commit\n</code></pre><h4 id=\"（6）跳过暂存区域\"><a href=\"#（6）跳过暂存区域\" class=\"headerlink\" title=\"（6）跳过暂存区域\"></a>（6）跳过暂存区域</h4><p>尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。 Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 <code>git commit</code> 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 <code>git add</code>步骤。</p>\n<h4 id=\"（7）移除文件\"><a href=\"#（7）移除文件\" class=\"headerlink\" title=\"（7）移除文件\"></a>（7）移除文件</h4><p>如果删除在“未暂存清单”的文件：</p>\n<pre><code>git status\ngit rm 文件名\n</code></pre><p>另外一种情况是，我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 为达到这一目的，使用 <code>--cached</code> 选项：</p>\n<pre><code>$ git rm --cached README\n</code></pre><h2 id=\"3、查看提交历史\"><a href=\"#3、查看提交历史\" class=\"headerlink\" title=\"3、查看提交历史\"></a>3、查看提交历史</h2><pre><code>git log\n</code></pre><p>默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。 正如你所看到的，这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明。</p>\n<p><code>git log</code> 有许多选项可以帮助你搜寻你所要找的提交</p>\n<ul>\n<li>-p   用来显示每次提交的内容差异，也可以再加上-2来仅显示最近两次提交。</li>\n<li>–stat 如果想看到每次提交的简略的统计信息。</li>\n</ul>\n<h2 id=\"4、撤销操作\"><a href=\"#4、撤销操作\" class=\"headerlink\" title=\"4、撤销操作\"></a>4、撤销操作</h2><h4 id=\"（1）撤消操作\"><a href=\"#（1）撤消操作\" class=\"headerlink\" title=\"（1）撤消操作\"></a>（1）撤消操作</h4><pre><code>git commit -amend //这个命令会将暂存区的文件提交。如果自  \n上次提交以来你未做任何修改，那么快照会保持不变，而你所修改 \n的知识提交信息\n</code></pre><h4 id=\"（2）取消暂存的文件\"><a href=\"#（2）取消暂存的文件\" class=\"headerlink\" title=\"（2）取消暂存的文件\"></a>（2）取消暂存的文件</h4><pre><code>git reset HEAD 文件名\n</code></pre><h4 id=\"（3）撤销对文件的修改\"><a href=\"#（3）撤销对文件的修改\" class=\"headerlink\" title=\"（3）撤销对文件的修改\"></a>（3）撤销对文件的修改</h4><pre><code>git checkout -- 文件名\n</code></pre><h2 id=\"5、远程仓库的使用\"><a href=\"#5、远程仓库的使用\" class=\"headerlink\" title=\"5、远程仓库的使用\"></a>5、远程仓库的使用</h2><h4 id=\"（1）查看远程仓库\"><a href=\"#（1）查看远程仓库\" class=\"headerlink\" title=\"（1）查看远程仓库\"></a>（1）查看远程仓库</h4><p>如果想查看已经配置的远程仓库服务器，可以运行<code>git remote</code>命令，他会列出你指定的每一个远程服务器的简写。<br>也可以指定选项<code>-v</code>，会显示需要读写远程仓库使用的Git保存的简写与其对应的URL。</p>\n<h4 id=\"（2）添加远程仓库\"><a href=\"#（2）添加远程仓库\" class=\"headerlink\" title=\"（2）添加远程仓库\"></a>（2）添加远程仓库</h4><pre><code>$ git remote\norigin\n$ git remote add pb https://github.com/paulboone/ticgit//添加远程仓库\n$ git remote -v\norigin    https://github.com/schacon/ticgit (fetch)\norigin    https://github.com/schacon/ticgit (push)\npb    https://github.com/paulboone/ticgit (fetch)\npb    https://github.com/paulboone/ticgit (push)\n</code></pre><p>现在可以在命令行使用字符串pb来代替整个URL。<br>例如，想要拉取Paul的仓库中有但你没有的信息，可以运行<code>git fetch pb</code></p>\n<h4 id=\"3-从远程仓库中抓取和拉取\"><a href=\"#3-从远程仓库中抓取和拉取\" class=\"headerlink\" title=\"(3)从远程仓库中抓取和拉取\"></a>(3)从远程仓库中抓取和拉取</h4><p>从远程仓库中获得数据，可以执行<br>    git fetch [remote-name]<br>这个命令会访问远程仓库，从中拉取所有你还没有的数据。执行完成后，你将会拥有那个远程仓库中所有的分支引用，可以随时合并查看。</p>\n<p>如果使用<code>clone</code>命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以”origin”为简写。<br>注意”fetch”命令会将数据拉取到你的本地仓库，但并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。  </p>\n<p>如果你有一个分支设置为跟踪一个远程分支，可以使用<code>git pull</code>命令来自动抓取然后合并远程分支到当前分支。</p>\n<h4 id=\"（4）推送到远程仓库\"><a href=\"#（4）推送到远程仓库\" class=\"headerlink\" title=\"（4）推送到远程仓库\"></a>（4）推送到远程仓库</h4><p>当你想分享你的项目时，必须将其推送到上游：</p>\n<pre><code>git push [remote-name] [branch-name]\n</code></pre><p>当你想将master分支推送到origin服务器时，运行如下命令可以将你所做的备份到服务器</p>\n<pre><code>git push origin master\n</code></pre><h4 id=\"（5）查看远程仓库\"><a href=\"#（5）查看远程仓库\" class=\"headerlink\" title=\"（5）查看远程仓库\"></a>（5）查看远程仓库</h4><p>如果想要查看某一个远程仓库的信息，可以使用<br>    <code>git remote show [remote-name]</code>  </p>\n<h4 id=\"（6）远程仓库的移除和重命名\"><a href=\"#（6）远程仓库的移除和重命名\" class=\"headerlink\" title=\"（6）远程仓库的移除和重命名\"></a>（6）远程仓库的移除和重命名</h4><p>如果想要重命名引用的名字可以运行<code>git remote  rename</code>去修改一个远程仓库的简写名 。</p>\n<p>如果因为一些原因想要移除一个远程仓库：<br>    git remote rm 仓库名  </p>\n<h2 id=\"6、打标签\"><a href=\"#6、打标签\" class=\"headerlink\" title=\"6、打标签\"></a>6、打标签</h2><h4 id=\"（1）列出标签\"><a href=\"#（1）列出标签\" class=\"headerlink\" title=\"（1）列出标签\"></a>（1）列出标签</h4><pre><code>git tag \n</code></pre><h4 id=\"（2）创建标签\"><a href=\"#（2）创建标签\" class=\"headerlink\" title=\"（2）创建标签\"></a>（2）创建标签</h4><ul>\n<li>附注标签：<code>git tag -a v1.4 -m &#39;my version 1.4&#39;</code></li>\n<li>轻量标签：<code>git tag v1.4-lw //不需要使用-a -s 或 -m选项，只需要提供标签名字</code></li>\n</ul>\n<h4 id=\"（3）后期打标签\"><a href=\"#（3）后期打标签\" class=\"headerlink\" title=\"（3）后期打标签\"></a>（3）后期打标签</h4><pre><code>git tag -a v1.2 部分校验和\n</code></pre><h4 id=\"（4）共享标签\"><a href=\"#（4）共享标签\" class=\"headerlink\" title=\"（4）共享标签\"></a>（4）共享标签</h4><p>默认情况下，<code>git push</code>命令并不会传送标签到远程仓库服务器上，在创建完标签后你必须显示的推送标签到共享服务器上，这个时候就像共享远程分支一样，可以运行：  </p>\n<pre><code>git push origin [tagname]  \n</code></pre><h2 id=\"7、Git别名\"><a href=\"#7、Git别名\" class=\"headerlink\" title=\"7、Git别名\"></a>7、Git别名</h2><p>为每一个命令设置别名，比如：</p>\n<pre><code>git config -global alias.co checkout\n</code></pre><p>commit用ci来代替  </p>\n<p><strong>参考</strong>：<a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">http://git-scm.com</a></p>\n<p>​    </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git基础\"><a href=\"#Git基础\" class=\"headerlink\" title=\"Git基础\"></a>Git基础</h1><h2 id=\"1、获取Git仓库\"><a href=\"#1、获取Git仓库\" class=\"headerlink\" title=\"1、获取Git仓库\"></a>1、获取Git仓库</h2><h4 id=\"（1）在现有目录下初始化仓库\"><a href=\"#（1）在现有目录下初始化仓库\" class=\"headerlink\" title=\"（1）在现有目录下初始化仓库\"></a>（1）在现有目录下初始化仓库</h4><pre><code>git init\n</code></pre><p>该命令将创建一个名为.git的目录，这个字目录含有初始化的Git仓库中所有的必须文件，这些文件是Git仓库的骨干。但是这个时候只是做了一个初始化的操作。</p>\n<h4 id=\"（2）克隆现有的仓库\"><a href=\"#（2）克隆现有的仓库\" class=\"headerlink\" title=\"（2）克隆现有的仓库\"></a>（2）克隆现有的仓库</h4><p>如果想参与某个项目的开发，贡献自己的一份力，这是需要用<code>git clone</code>命令，clone是负值Git仓库服务器上的几乎所有数据，不仅仅是复制文件，执行<code>git clone</code>命令的时候，默认复制远程仓库每一个文件的每一个版本（分支）都将被拉取下来。</p>\n<pre><code>git clone [url]\n</code></pre><p>Git支持多种传输协议：<code>http://</code>协议，<code>git://</code>协议，<code>SSH</code>传输协议</p>\n<h2 id=\"2、记录每次更新到仓库\"><a href=\"#2、记录每次更新到仓库\" class=\"headerlink\" title=\"2、记录每次更新到仓库\"></a>2、记录每次更新到仓库</h2><blockquote>\n<p>现在我们手上有了一个真实项目的 Git 仓库，并从这个仓库中取出了所有文件的工作拷贝。 接下来，对这些文件做些修改，在完成了一个阶段的目标之后，提交本次更新到仓库。</p>\n</blockquote>\n<blockquote>\n<p>请记住，你工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。 已跟踪的文件是指那些被纳入了版本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放入暂存区。 工作目录中除已跟踪文件以外的所有其它文件都属于未跟踪文件，它们既不存在于上次快照的记录中，也没有放入暂存区。 初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态。</p>\n</blockquote>\n<blockquote>\n<p>编辑过某些文件之后，由于自上次提交后你对它们做了修改，Git 将它们标记为已修改文件。 我们逐步将这些修改过的文件放入暂存区，然后提交所有暂存了的修改，如此反复。所以使用Git时文件的生命周期如下：  </p>\n<p><img src=\"/img/Git/git生命周期.png\" alt=\"git生命周期.png\"></p>\n</blockquote>\n<h4 id=\"（1）检查文件状态\"><a href=\"#（1）检查文件状态\" class=\"headerlink\" title=\"（1）检查文件状态\"></a>（1）检查文件状态</h4><p>检查文件处于什么状态，用<code>git status</code>命令。<br>当克隆玩仓库后使用此命令，会提示工作目录非常干净，意思是已跟踪文件最近没有被修改过，并且目录下没有出现处于任何跟踪状态的新文件，否则Git会列出来。</p>\n<h4 id=\"（2）跟踪新文件\"><a href=\"#（2）跟踪新文件\" class=\"headerlink\" title=\"（2）跟踪新文件\"></a>（2）跟踪新文件</h4><pre><code>git add 文件名\n</code></pre><h4 id=\"（3）暂存已修改文件\"><a href=\"#（3）暂存已修改文件\" class=\"headerlink\" title=\"（3）暂存已修改文件\"></a>（3）暂存已修改文件</h4><pre><code>git add\n</code></pre><p>这是一个多功能命令：</p>\n<ul>\n<li>开始跟踪新文件</li>\n<li>把已跟踪的文件放在暂存区</li>\n<li>用于合并时把有冲突的文件标记为已解决状态等</li>\n</ul>\n<p>将这个命令理解为“添加内容到下一次提交出”而不是“将一个文件添加到项目中”要更加合适。</p>\n<h4 id=\"（4）忽略文件\"><a href=\"#（4）忽略文件\" class=\"headerlink\" title=\"（4）忽略文件\"></a>（4）忽略文件</h4><p>一般有些文件不需要纳入Git的管理，不希望他们总出现在未跟踪文件列表，比如日志文件啊。这时可以创建一个名为<code>.gitignore</code>的文件，列出要忽略的文件模式。</p>\n<pre><code>$cat.gitignore\n*.[oa]\n*~\n</code></pre><blockquote>\n<p>第一行告诉 Git 忽略所有以 .o 或 .a 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。 第二行告诉 Git 忽略所有以波浪符（~）结尾的文件，许多文本编辑软件（比如 Emacs）都用这样的文件名保存副本。 此外，你可能还需要忽略 log，tmp 或者 pid 目录，以及自动生成的文档等等。 要养成一开始就设置好 .gitignore 文件的习惯，以免将来误提交这类无用的文件。</p>\n</blockquote>\n<h4 id=\"（4）查看暂存和未暂存的修改\"><a href=\"#（4）查看暂存和未暂存的修改\" class=\"headerlink\" title=\"（4）查看暂存和未暂存的修改\"></a>（4）查看暂存和未暂存的修改</h4><pre><code>git diff //修改之后还没有暂存起来的变化内容。\ngit diff --cached //工作目录中当前文件和暂存区域快照之间的差异\n</code></pre><h4 id=\"（5）提交更新\"><a href=\"#（5）提交更新\" class=\"headerlink\" title=\"（5）提交更新\"></a>（5）提交更新</h4><pre><code>git commit\n</code></pre><h4 id=\"（6）跳过暂存区域\"><a href=\"#（6）跳过暂存区域\" class=\"headerlink\" title=\"（6）跳过暂存区域\"></a>（6）跳过暂存区域</h4><p>尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。 Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 <code>git commit</code> 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 <code>git add</code>步骤。</p>\n<h4 id=\"（7）移除文件\"><a href=\"#（7）移除文件\" class=\"headerlink\" title=\"（7）移除文件\"></a>（7）移除文件</h4><p>如果删除在“未暂存清单”的文件：</p>\n<pre><code>git status\ngit rm 文件名\n</code></pre><p>另外一种情况是，我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 为达到这一目的，使用 <code>--cached</code> 选项：</p>\n<pre><code>$ git rm --cached README\n</code></pre><h2 id=\"3、查看提交历史\"><a href=\"#3、查看提交历史\" class=\"headerlink\" title=\"3、查看提交历史\"></a>3、查看提交历史</h2><pre><code>git log\n</code></pre><p>默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。 正如你所看到的，这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明。</p>\n<p><code>git log</code> 有许多选项可以帮助你搜寻你所要找的提交</p>\n<ul>\n<li>-p   用来显示每次提交的内容差异，也可以再加上-2来仅显示最近两次提交。</li>\n<li>–stat 如果想看到每次提交的简略的统计信息。</li>\n</ul>\n<h2 id=\"4、撤销操作\"><a href=\"#4、撤销操作\" class=\"headerlink\" title=\"4、撤销操作\"></a>4、撤销操作</h2><h4 id=\"（1）撤消操作\"><a href=\"#（1）撤消操作\" class=\"headerlink\" title=\"（1）撤消操作\"></a>（1）撤消操作</h4><pre><code>git commit -amend //这个命令会将暂存区的文件提交。如果自  \n上次提交以来你未做任何修改，那么快照会保持不变，而你所修改 \n的知识提交信息\n</code></pre><h4 id=\"（2）取消暂存的文件\"><a href=\"#（2）取消暂存的文件\" class=\"headerlink\" title=\"（2）取消暂存的文件\"></a>（2）取消暂存的文件</h4><pre><code>git reset HEAD 文件名\n</code></pre><h4 id=\"（3）撤销对文件的修改\"><a href=\"#（3）撤销对文件的修改\" class=\"headerlink\" title=\"（3）撤销对文件的修改\"></a>（3）撤销对文件的修改</h4><pre><code>git checkout -- 文件名\n</code></pre><h2 id=\"5、远程仓库的使用\"><a href=\"#5、远程仓库的使用\" class=\"headerlink\" title=\"5、远程仓库的使用\"></a>5、远程仓库的使用</h2><h4 id=\"（1）查看远程仓库\"><a href=\"#（1）查看远程仓库\" class=\"headerlink\" title=\"（1）查看远程仓库\"></a>（1）查看远程仓库</h4><p>如果想查看已经配置的远程仓库服务器，可以运行<code>git remote</code>命令，他会列出你指定的每一个远程服务器的简写。<br>也可以指定选项<code>-v</code>，会显示需要读写远程仓库使用的Git保存的简写与其对应的URL。</p>\n<h4 id=\"（2）添加远程仓库\"><a href=\"#（2）添加远程仓库\" class=\"headerlink\" title=\"（2）添加远程仓库\"></a>（2）添加远程仓库</h4><pre><code>$ git remote\norigin\n$ git remote add pb https://github.com/paulboone/ticgit//添加远程仓库\n$ git remote -v\norigin    https://github.com/schacon/ticgit (fetch)\norigin    https://github.com/schacon/ticgit (push)\npb    https://github.com/paulboone/ticgit (fetch)\npb    https://github.com/paulboone/ticgit (push)\n</code></pre><p>现在可以在命令行使用字符串pb来代替整个URL。<br>例如，想要拉取Paul的仓库中有但你没有的信息，可以运行<code>git fetch pb</code></p>\n<h4 id=\"3-从远程仓库中抓取和拉取\"><a href=\"#3-从远程仓库中抓取和拉取\" class=\"headerlink\" title=\"(3)从远程仓库中抓取和拉取\"></a>(3)从远程仓库中抓取和拉取</h4><p>从远程仓库中获得数据，可以执行<br>    git fetch [remote-name]<br>这个命令会访问远程仓库，从中拉取所有你还没有的数据。执行完成后，你将会拥有那个远程仓库中所有的分支引用，可以随时合并查看。</p>\n<p>如果使用<code>clone</code>命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以”origin”为简写。<br>注意”fetch”命令会将数据拉取到你的本地仓库，但并不会自动合并或修改你当前的工作。当准备好时你必须手动将其合并入你的工作。  </p>\n<p>如果你有一个分支设置为跟踪一个远程分支，可以使用<code>git pull</code>命令来自动抓取然后合并远程分支到当前分支。</p>\n<h4 id=\"（4）推送到远程仓库\"><a href=\"#（4）推送到远程仓库\" class=\"headerlink\" title=\"（4）推送到远程仓库\"></a>（4）推送到远程仓库</h4><p>当你想分享你的项目时，必须将其推送到上游：</p>\n<pre><code>git push [remote-name] [branch-name]\n</code></pre><p>当你想将master分支推送到origin服务器时，运行如下命令可以将你所做的备份到服务器</p>\n<pre><code>git push origin master\n</code></pre><h4 id=\"（5）查看远程仓库\"><a href=\"#（5）查看远程仓库\" class=\"headerlink\" title=\"（5）查看远程仓库\"></a>（5）查看远程仓库</h4><p>如果想要查看某一个远程仓库的信息，可以使用<br>    <code>git remote show [remote-name]</code>  </p>\n<h4 id=\"（6）远程仓库的移除和重命名\"><a href=\"#（6）远程仓库的移除和重命名\" class=\"headerlink\" title=\"（6）远程仓库的移除和重命名\"></a>（6）远程仓库的移除和重命名</h4><p>如果想要重命名引用的名字可以运行<code>git remote  rename</code>去修改一个远程仓库的简写名 。</p>\n<p>如果因为一些原因想要移除一个远程仓库：<br>    git remote rm 仓库名  </p>\n<h2 id=\"6、打标签\"><a href=\"#6、打标签\" class=\"headerlink\" title=\"6、打标签\"></a>6、打标签</h2><h4 id=\"（1）列出标签\"><a href=\"#（1）列出标签\" class=\"headerlink\" title=\"（1）列出标签\"></a>（1）列出标签</h4><pre><code>git tag \n</code></pre><h4 id=\"（2）创建标签\"><a href=\"#（2）创建标签\" class=\"headerlink\" title=\"（2）创建标签\"></a>（2）创建标签</h4><ul>\n<li>附注标签：<code>git tag -a v1.4 -m &#39;my version 1.4&#39;</code></li>\n<li>轻量标签：<code>git tag v1.4-lw //不需要使用-a -s 或 -m选项，只需要提供标签名字</code></li>\n</ul>\n<h4 id=\"（3）后期打标签\"><a href=\"#（3）后期打标签\" class=\"headerlink\" title=\"（3）后期打标签\"></a>（3）后期打标签</h4><pre><code>git tag -a v1.2 部分校验和\n</code></pre><h4 id=\"（4）共享标签\"><a href=\"#（4）共享标签\" class=\"headerlink\" title=\"（4）共享标签\"></a>（4）共享标签</h4><p>默认情况下，<code>git push</code>命令并不会传送标签到远程仓库服务器上，在创建完标签后你必须显示的推送标签到共享服务器上，这个时候就像共享远程分支一样，可以运行：  </p>\n<pre><code>git push origin [tagname]  \n</code></pre><h2 id=\"7、Git别名\"><a href=\"#7、Git别名\" class=\"headerlink\" title=\"7、Git别名\"></a>7、Git别名</h2><p>为每一个命令设置别名，比如：</p>\n<pre><code>git config -global alias.co checkout\n</code></pre><p>commit用ci来代替  </p>\n<p><strong>参考</strong>：<a href=\"http://git-scm.com\" target=\"_blank\" rel=\"noopener\">http://git-scm.com</a></p>\n<p>​    </p>\n"},{"title":"锁池与等待池","date":"2018-07-24T16:14:35.000Z","_content":"\n# Java中对锁池与等待池的理解？\n\n对于 Java 虚拟机中运行程序的每个对象来说都有两个池，锁(monitor)池和等待(wait)池，而这两个池又与 Object 基类的 wait、notify、notifyAll 三个方法和 synchronized 相关（也可是 Lock 及 await 等）。\n\n**锁池**的本质就是假设线程 A 已经拥有了某个对象（不是类）的锁，而其它线程 B、C 想要调用这个对象的某个 synchronized 方法（或者块），由于这些 B、C 线程在进入对象的 synchronized 方法（或者块）之前必须先获得该对象锁的拥有权，而恰巧该对象的锁目前正被线程 A 所拥有，所以这些 B、C 线程就进入了该对象的锁池，这就是锁池。\n\n**等待池**的本质就是假设线程 A 调用了某个对象的 wait() 方法，线程 A 就会释放该对象的锁（因为 wait() 方法必须在 synchronized中使用，所以执行 wait() 方法前线程 A 已经持有了该对象的锁)，同时线程 A 就进入到了该对象的等待池中。如果此时线程 B 调用了相同对象的 notifyAll() 方法，则处于该对象等待池中的线程就会全部进入该对象的锁池中去准备争夺锁的拥有权。而如果此时线程 B 调用的是相同对象的 notify() 方法，则仅仅会有一个处于该对象等待池中的线程（随机）进入该对象的锁池中去准备争夺锁的拥有权。\n\n**所以说锁池和等待池都是针对对象而言的**\n\n# notify与notifyAll到底有什么区别？\n\n简单说就是当一个线程调用了某个对象的 wait() 方法后就必须等其他线程调用这个对象的 notify/notifyall 方法；使用 notifyall 方法可以唤醒所有处于等待状态的线程，然后使其重新进入锁的争夺队列中，而使用 notify 方法只能唤醒处于等待状态的线程之一；此外如果使用 notify 不当很容易会导致并发死锁出现。\n\n而从深层次来说就如上题答案所示，notifyAll 会让对象所有处于等待池的线程全部进入锁池去准备竞争获取一个锁的机会，没有获取到锁而已经呆在锁池的线程只能继续等待其他机会获取锁，而不能再主动回到等待池。对于 notify 来说只会让对象所有等待池中一个随机的线程进入锁池去竞争获取一个锁的机会。","source":"_posts/锁池与等待池.md","raw":"---\ntitle: 锁池与等待池\ndate: 2018-07-25 00:14:35\ntags: 面试\ncategories: 面试\n---\n\n# Java中对锁池与等待池的理解？\n\n对于 Java 虚拟机中运行程序的每个对象来说都有两个池，锁(monitor)池和等待(wait)池，而这两个池又与 Object 基类的 wait、notify、notifyAll 三个方法和 synchronized 相关（也可是 Lock 及 await 等）。\n\n**锁池**的本质就是假设线程 A 已经拥有了某个对象（不是类）的锁，而其它线程 B、C 想要调用这个对象的某个 synchronized 方法（或者块），由于这些 B、C 线程在进入对象的 synchronized 方法（或者块）之前必须先获得该对象锁的拥有权，而恰巧该对象的锁目前正被线程 A 所拥有，所以这些 B、C 线程就进入了该对象的锁池，这就是锁池。\n\n**等待池**的本质就是假设线程 A 调用了某个对象的 wait() 方法，线程 A 就会释放该对象的锁（因为 wait() 方法必须在 synchronized中使用，所以执行 wait() 方法前线程 A 已经持有了该对象的锁)，同时线程 A 就进入到了该对象的等待池中。如果此时线程 B 调用了相同对象的 notifyAll() 方法，则处于该对象等待池中的线程就会全部进入该对象的锁池中去准备争夺锁的拥有权。而如果此时线程 B 调用的是相同对象的 notify() 方法，则仅仅会有一个处于该对象等待池中的线程（随机）进入该对象的锁池中去准备争夺锁的拥有权。\n\n**所以说锁池和等待池都是针对对象而言的**\n\n# notify与notifyAll到底有什么区别？\n\n简单说就是当一个线程调用了某个对象的 wait() 方法后就必须等其他线程调用这个对象的 notify/notifyall 方法；使用 notifyall 方法可以唤醒所有处于等待状态的线程，然后使其重新进入锁的争夺队列中，而使用 notify 方法只能唤醒处于等待状态的线程之一；此外如果使用 notify 不当很容易会导致并发死锁出现。\n\n而从深层次来说就如上题答案所示，notifyAll 会让对象所有处于等待池的线程全部进入锁池去准备竞争获取一个锁的机会，没有获取到锁而已经呆在锁池的线程只能继续等待其他机会获取锁，而不能再主动回到等待池。对于 notify 来说只会让对象所有等待池中一个随机的线程进入锁池去竞争获取一个锁的机会。","slug":"锁池与等待池","published":1,"updated":"2018-09-28T01:59:28.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctfz000okg9yynamaoq2","content":"<h1 id=\"Java中对锁池与等待池的理解？\"><a href=\"#Java中对锁池与等待池的理解？\" class=\"headerlink\" title=\"Java中对锁池与等待池的理解？\"></a>Java中对锁池与等待池的理解？</h1><p>对于 Java 虚拟机中运行程序的每个对象来说都有两个池，锁(monitor)池和等待(wait)池，而这两个池又与 Object 基类的 wait、notify、notifyAll 三个方法和 synchronized 相关（也可是 Lock 及 await 等）。</p>\n<p><strong>锁池</strong>的本质就是假设线程 A 已经拥有了某个对象（不是类）的锁，而其它线程 B、C 想要调用这个对象的某个 synchronized 方法（或者块），由于这些 B、C 线程在进入对象的 synchronized 方法（或者块）之前必须先获得该对象锁的拥有权，而恰巧该对象的锁目前正被线程 A 所拥有，所以这些 B、C 线程就进入了该对象的锁池，这就是锁池。</p>\n<p><strong>等待池</strong>的本质就是假设线程 A 调用了某个对象的 wait() 方法，线程 A 就会释放该对象的锁（因为 wait() 方法必须在 synchronized中使用，所以执行 wait() 方法前线程 A 已经持有了该对象的锁)，同时线程 A 就进入到了该对象的等待池中。如果此时线程 B 调用了相同对象的 notifyAll() 方法，则处于该对象等待池中的线程就会全部进入该对象的锁池中去准备争夺锁的拥有权。而如果此时线程 B 调用的是相同对象的 notify() 方法，则仅仅会有一个处于该对象等待池中的线程（随机）进入该对象的锁池中去准备争夺锁的拥有权。</p>\n<p><strong>所以说锁池和等待池都是针对对象而言的</strong></p>\n<h1 id=\"notify与notifyAll到底有什么区别？\"><a href=\"#notify与notifyAll到底有什么区别？\" class=\"headerlink\" title=\"notify与notifyAll到底有什么区别？\"></a>notify与notifyAll到底有什么区别？</h1><p>简单说就是当一个线程调用了某个对象的 wait() 方法后就必须等其他线程调用这个对象的 notify/notifyall 方法；使用 notifyall 方法可以唤醒所有处于等待状态的线程，然后使其重新进入锁的争夺队列中，而使用 notify 方法只能唤醒处于等待状态的线程之一；此外如果使用 notify 不当很容易会导致并发死锁出现。</p>\n<p>而从深层次来说就如上题答案所示，notifyAll 会让对象所有处于等待池的线程全部进入锁池去准备竞争获取一个锁的机会，没有获取到锁而已经呆在锁池的线程只能继续等待其他机会获取锁，而不能再主动回到等待池。对于 notify 来说只会让对象所有等待池中一个随机的线程进入锁池去竞争获取一个锁的机会。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java中对锁池与等待池的理解？\"><a href=\"#Java中对锁池与等待池的理解？\" class=\"headerlink\" title=\"Java中对锁池与等待池的理解？\"></a>Java中对锁池与等待池的理解？</h1><p>对于 Java 虚拟机中运行程序的每个对象来说都有两个池，锁(monitor)池和等待(wait)池，而这两个池又与 Object 基类的 wait、notify、notifyAll 三个方法和 synchronized 相关（也可是 Lock 及 await 等）。</p>\n<p><strong>锁池</strong>的本质就是假设线程 A 已经拥有了某个对象（不是类）的锁，而其它线程 B、C 想要调用这个对象的某个 synchronized 方法（或者块），由于这些 B、C 线程在进入对象的 synchronized 方法（或者块）之前必须先获得该对象锁的拥有权，而恰巧该对象的锁目前正被线程 A 所拥有，所以这些 B、C 线程就进入了该对象的锁池，这就是锁池。</p>\n<p><strong>等待池</strong>的本质就是假设线程 A 调用了某个对象的 wait() 方法，线程 A 就会释放该对象的锁（因为 wait() 方法必须在 synchronized中使用，所以执行 wait() 方法前线程 A 已经持有了该对象的锁)，同时线程 A 就进入到了该对象的等待池中。如果此时线程 B 调用了相同对象的 notifyAll() 方法，则处于该对象等待池中的线程就会全部进入该对象的锁池中去准备争夺锁的拥有权。而如果此时线程 B 调用的是相同对象的 notify() 方法，则仅仅会有一个处于该对象等待池中的线程（随机）进入该对象的锁池中去准备争夺锁的拥有权。</p>\n<p><strong>所以说锁池和等待池都是针对对象而言的</strong></p>\n<h1 id=\"notify与notifyAll到底有什么区别？\"><a href=\"#notify与notifyAll到底有什么区别？\" class=\"headerlink\" title=\"notify与notifyAll到底有什么区别？\"></a>notify与notifyAll到底有什么区别？</h1><p>简单说就是当一个线程调用了某个对象的 wait() 方法后就必须等其他线程调用这个对象的 notify/notifyall 方法；使用 notifyall 方法可以唤醒所有处于等待状态的线程，然后使其重新进入锁的争夺队列中，而使用 notify 方法只能唤醒处于等待状态的线程之一；此外如果使用 notify 不当很容易会导致并发死锁出现。</p>\n<p>而从深层次来说就如上题答案所示，notifyAll 会让对象所有处于等待池的线程全部进入锁池去准备竞争获取一个锁的机会，没有获取到锁而已经呆在锁池的线程只能继续等待其他机会获取锁，而不能再主动回到等待池。对于 notify 来说只会让对象所有等待池中一个随机的线程进入锁池去竞争获取一个锁的机会。</p>\n"},{"title":"面经","date":"2018-08-03T15:44:07.000Z","_content":"\n# 蚂蚁金服提前批中间件\n\n## 一面\n\n## 二面\n\n## 三面\n\n线程池：线程池中线程name的设置。线程池线程执行栈的观测方法。线程池中线程怎么得知线程的状态。\n\n分布式框架\n\nTCP/IP：TCP为什么是可靠的\n\nLinux：线程进程的操作\n\n","source":"_posts/面经.md","raw":"---\ntitle: 面经\ndate: 2018-08-03 23:44:07\ntags: 面试\ncategories: 面试\n---\n\n# 蚂蚁金服提前批中间件\n\n## 一面\n\n## 二面\n\n## 三面\n\n线程池：线程池中线程name的设置。线程池线程执行栈的观测方法。线程池中线程怎么得知线程的状态。\n\n分布式框架\n\nTCP/IP：TCP为什么是可靠的\n\nLinux：线程进程的操作\n\n","slug":"面经","published":1,"updated":"2018-09-28T01:59:28.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5sctg2000qkg9yyvbezsd0","content":"<h1 id=\"蚂蚁金服提前批中间件\"><a href=\"#蚂蚁金服提前批中间件\" class=\"headerlink\" title=\"蚂蚁金服提前批中间件\"></a>蚂蚁金服提前批中间件</h1><h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2><h2 id=\"三面\"><a href=\"#三面\" class=\"headerlink\" title=\"三面\"></a>三面</h2><p>线程池：线程池中线程name的设置。线程池线程执行栈的观测方法。线程池中线程怎么得知线程的状态。</p>\n<p>分布式框架</p>\n<p>TCP/IP：TCP为什么是可靠的</p>\n<p>Linux：线程进程的操作</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"蚂蚁金服提前批中间件\"><a href=\"#蚂蚁金服提前批中间件\" class=\"headerlink\" title=\"蚂蚁金服提前批中间件\"></a>蚂蚁金服提前批中间件</h1><h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2><h2 id=\"三面\"><a href=\"#三面\" class=\"headerlink\" title=\"三面\"></a>三面</h2><p>线程池：线程池中线程name的设置。线程池线程执行栈的观测方法。线程池中线程怎么得知线程的状态。</p>\n<p>分布式框架</p>\n<p>TCP/IP：TCP为什么是可靠的</p>\n<p>Linux：线程进程的操作</p>\n"},{"title":"《现代操作系统》总结","date":"2018-11-06T13:29:37.000Z","_content":"","source":"_posts/《现代操作系统》总结.md","raw":"---\ntitle: 《现代操作系统》总结\ndate: 2018-11-06 21:29:37\ntags: 操作系统\ncategories: 操作系统\n---\n","slug":"《现代操作系统》总结","published":1,"updated":"2018-11-06T13:43:49.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo5scth70015kg9y3myvqog2","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cjo5sctai0000kg9ykuz4t5v7","category_id":"cjo5sctap0002kg9ykinkc0s7","_id":"cjo5sctav0008kg9yzzodtqjo"},{"post_id":"cjo5sctan0001kg9ygtg05yqz","category_id":"cjo5sctat0005kg9y1ds98h0e","_id":"cjo5sctaw000ckg9yci1tq339"},{"post_id":"cjo5sctar0004kg9ygxxmko8t","category_id":"cjo5sctav0009kg9y2kkfxzjj","_id":"cjo5sctax000ekg9yvft9vvvg"},{"post_id":"cjo5sctfp000fkg9ylv4k2lic","category_id":"cjo5sctat0005kg9y1ds98h0e","_id":"cjo5sctg1000pkg9yn5jz638a"},{"post_id":"cjo5sctfs000hkg9y7ly9wf96","category_id":"cjo5sctfy000mkg9yehsh02rf","_id":"cjo5sctg6000vkg9yg623y9sz"},{"post_id":"cjo5sctfw000kkg9ygmvo84hn","category_id":"cjo5sctfy000mkg9yehsh02rf","_id":"cjo5sctg7000ykg9yal48xayx"},{"post_id":"cjo5sctfz000okg9yynamaoq2","category_id":"cjo5sctg6000ukg9y6iygv0a1","_id":"cjo5sctg90012kg9yjnnutas8"},{"post_id":"cjo5sctg2000qkg9yyvbezsd0","category_id":"cjo5sctg6000ukg9y6iygv0a1","_id":"cjo5sctga0014kg9yrotcljwb"},{"post_id":"cjo5scth70015kg9y3myvqog2","category_id":"cjo5scth80016kg9yppiqe0ui","_id":"cjo5scth90019kg9yu25vavcx"}],"PostTag":[{"post_id":"cjo5sctai0000kg9ykuz4t5v7","tag_id":"cjo5sctar0003kg9yaups8eq2","_id":"cjo5sctau0007kg9yhrqoxshq"},{"post_id":"cjo5sctan0001kg9ygtg05yqz","tag_id":"cjo5sctat0006kg9y82yl179x","_id":"cjo5sctaw000bkg9y7ojk3157"},{"post_id":"cjo5sctar0004kg9ygxxmko8t","tag_id":"cjo5sctav000akg9ye350mhmj","_id":"cjo5sctax000dkg9y3ct41inw"},{"post_id":"cjo5sctfp000fkg9ylv4k2lic","tag_id":"cjo5sctat0006kg9y82yl179x","_id":"cjo5sctfv000jkg9yaain5gw0"},{"post_id":"cjo5sctfs000hkg9y7ly9wf96","tag_id":"cjo5sctfy000nkg9yzegp1ieq","_id":"cjo5sctg5000tkg9ynzt6uwvn"},{"post_id":"cjo5sctfw000kkg9ygmvo84hn","tag_id":"cjo5sctfy000nkg9yzegp1ieq","_id":"cjo5sctg7000xkg9y9h6gkiv3"},{"post_id":"cjo5sctfz000okg9yynamaoq2","tag_id":"cjo5sctg6000wkg9yy48tisag","_id":"cjo5sctg80011kg9yoof93vac"},{"post_id":"cjo5sctg2000qkg9yyvbezsd0","tag_id":"cjo5sctg6000wkg9yy48tisag","_id":"cjo5sctg90013kg9y628i62tv"},{"post_id":"cjo5scth70015kg9y3myvqog2","tag_id":"cjo5scth80017kg9yi3owjwkn","_id":"cjo5scth90018kg9yy4il86y6"}],"Tag":[{"name":"JVM","_id":"cjo5sctar0003kg9yaups8eq2"},{"name":"分布式","_id":"cjo5sctat0006kg9y82yl179x"},{"name":"Netty","_id":"cjo5sctav000akg9ye350mhmj"},{"name":"Git","_id":"cjo5sctfy000nkg9yzegp1ieq"},{"name":"面试","_id":"cjo5sctg6000wkg9yy48tisag"},{"name":"操作系统","_id":"cjo5scth80017kg9yi3owjwkn"}]}}